{"config":{"lang":["en","pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Scopus Survey API","text":"Web API for bibliographic survey of Scopus articles <p>Federal Institute of Mato Grosso do Sul - IFMS - Campus Tr\u00eas Lagoas  Technology in Systems Analysis and Development - TADS  Brazil - MS - Tr\u00eas Lagoas </p> <p>Source Code: https://github.com/mauprogramador/scopus-survey-api</p>"},{"location":"#overview","title":"Overview","text":"<p>This Web API was developed to facilitate the search for articles for research and the development of theoretical references. It will use both the Scopus Search API and the Scopus Abstract Retrieval API, maintained by the Elsevier company, to query the Scopus cluster, which is the largest database of abstracts and citations of quality research literature and sources on the web.</p> <p>To perform the search, you will need to have Python3 or Docker installed to run the application, you will also need to generate an <code>API Key</code> and select a maximum of four <code>Keywords</code> based on the topic of your search. Start the application, go to the web page, submit your <code>API Key</code> and your <code>Keywords</code>, and if any articles are found, a CSV file with the article information will be returned.</p> <p>Note</p> <p>This project is licensed under the terms of the MIT license.</p>"},{"location":"api-limit-and-fields-and-filter/","title":"APIs Limit &amp; Fields &amp; Filter","text":""},{"location":"api-limit-and-fields-and-filter/#apis-limit","title":"APIs Limit","text":"<p>There is a limit to how many requests you can make to Scopus APIs using your <code>API Key</code>. After each request, the API will return some information about the availability of your <code>API Key</code> in the response headers. This quota limit resets every seven days.</p> <pre><code>\"X-RateLimit-Limit\": \"Shows API request quota limit\",\n\"X-RateLimit-Remaining\": \"Shows API remaining request quota\",\n\"X-RateLimit-Reset\": \"Date/Time in Epoch seconds when API quota resets\"\n</code></pre> <p>Info</p> <p>Epoch is the number of seconds that have elapsed since January 1, 1970, also known as Unix time.</p>"},{"location":"api-limit-and-fields-and-filter/#quota-exceeded","title":"Quota Exceeded","text":"<p>If the request quota or throttling rate of the API is exceeded, you will receive an HTTP status error 429: Too Many Requests.</p> <pre><code>\"X-ELS-Status\": \"QUOTA_EXCEEDED - Quota Exceeded\"\n</code></pre> <p>Note</p> <p>Learn more about the quota of how much data an <code>API Key</code> can retrieve.</p>"},{"location":"api-limit-and-fields-and-filter/#fields-mapping","title":"Fields Mapping","text":"<p>Taking into account that the objective of this application is to carry out a survey of theoretical references for research and as a basis for future academic work, we selected a group of specific information from the articles' metadata.</p> Field Column Description <code>link ref=scopus</code> Article Preview Page URL Scopus article preview page URL <code>dc:identifier</code> Scopus ID Article Scopus ID <code>authors</code> or <code>dc:creator</code> Authors Complete author list or only the first author <code>dc:title</code> Title Article title <code>prism:publicationName</code> Publication Name Source title <code>dc:description</code> Abstract Article complete abstract <code>prism:coverDate</code> Date Publication date <code>eid</code> Electronic ID Article Electronic ID <code>prism:doi</code> DOI Document Object Identifier <code>prism:volume</code> Volume Identifier for a serial publication <code>citedby-count</code> Citations Cited-by count <p>Note</p> <p>See an example of a Scopus article preview page.</p>"},{"location":"api-limit-and-fields-and-filter/#filtering-results","title":"Filtering Results","text":"<p>To provide greater consistency, all data goes through three filtering steps:</p> <p>1. Firstly, all exact repetitions will be removed.</p> <p>2. Secondly, all results with the exact same title and same authors will be removed.</p> <p>3. Finally, all results with similar titles and from the same authors will be removed.</p> <p>To perform the third step, we will select two or more articles that have exactly the same authors. After that, we will use the TheFuzz library, which uses Levenshtein Distance, to calculate the similarity between the titles of the articles of those repeated authors and, finally, we will remove the articles whose titles are at least <code>80%</code> similar.</p> <p>Articles that do not have repeated authors or similar titles will be disregarded. A log message will be displayed indicating the percentage of total loss of articles.</p>"},{"location":"contact/","title":"Contact","text":""},{"location":"contact/#hey-im-mauricio","title":"Hey!  I'm Maur\u00edcio","text":"@mauprogramador <p>I am the Brazilian creator and owner of the ScopusSurveyAPI repository. A Backend developer, with Python and Javascript, and also a Web developer.</p> <p>You can connect with me (Maur\u00edcio / @mauprogramador), the author. If you enjoy this Web API, please take a look at my GitHub profile, contact and follow me.</p> <p> </p>"},{"location":"environment/","title":"Environment","text":""},{"location":"environment/#configuration","title":"Configuration","text":"Parameter Description Default <code>debug</code> Enable the debug logs output <code>false</code> <code>logging_file</code> Enable saving log records to file. This will create a <code>.logs</code> folder <code>false</code> <code>host</code> Bind the socket to this host address.Set <code>0.0.0.0</code> to make the application available on your local network <code>127.0.0.1</code> <code>port</code> Bind to a socket and run the application with this port <code>8000</code> <code>reload</code> Enables automatic reloading of the application when files are modified <code>false</code> <p>You can configure some parameters for the application in the <code>pyproject.toml</code> file, such as:</p> pyproject.toml<pre><code>[application]\ndebug = false\nlogging_file = false\nhost = \"127.0.0.1\"\nport = 8000\nreload = false\n</code></pre> <p>You can also set environment variables to override the default configuration when running the application locally or in a Docker container.</p> .env<pre><code>DEBUG=false\n\nLOGGING_FILE=false\n\nHOST=127.0.0.1\n\nPORT=8000\n\nRELOAD=false\n</code></pre>"},{"location":"environment/#python-environment","title":"Python Environment","text":"<p>It is necessary to prepare an environment with the correct dependencies to work properly with each area of the application. To do this, you need to install Python3 <code>v3.11</code> with Venv and Pip.</p> <p>Info</p> <p>This project uses Poetry to package and manage Python dependencies.</p> <p>Tip</p> <p>You can also use Docker to run the application.</p>"},{"location":"environment/#setup-the-virtual-environment","title":"Setup the Virtual Environment","text":"<pre><code># Setup Venv\nmake setup\n\n# Activate Venv\nsource .venv/bin/activate\n</code></pre>"},{"location":"environment/#dependencies","title":"Dependencies","text":""},{"location":"environment/#complete-environment","title":"Complete Environment","text":"<p> Install all dependencies.</p> with Poetrywith Pip <pre><code>(.venv) poetry install\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-all.txt\n</code></pre>"},{"location":"environment/#application-environment","title":"Application Environment","text":"<p> Install only the application dependencies.</p> with Poetrywith Pip <pre><code>(.venv) make install\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements.txt\n</code></pre> <p>  Run the application</p> LocallyDocker <pre><code># Run the application Locally\n(.venv) make run\n</code></pre> <pre><code># Run the application in Docker Container\nmake docker\n</code></pre>"},{"location":"environment/#development-environment","title":"Development Environment","text":"<p> Install only the development dependencies.</p> with Poetrywith Pip <pre><code>(.venv) poetry install --only dev\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-dev.txt\n</code></pre> <p>  Perform Formatting, Linting, and Vulnerability Auditing.</p> <pre><code># run Formatting\n(.venv) make format\n\n# run Linting\n(.venv) make lint\n\n# run Linting in Tests\n(.venv) make lint-tests\n\n# run Audit Vulnerability\n(.venv) make audit\n</code></pre>"},{"location":"environment/#tests-environment","title":"Tests Environment","text":"<p> Install only the tests dependencies.</p> with Poetrywith Pip <pre><code>(.venv) poetry install --only test\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-test.txt\n</code></pre> <p>  Run the tests and check the tests coverage</p> LocallyDocker <pre><code># Run Pytest in Venv\n(.venv) make test\n\n# Run Coverage in Venv\n(.venv) make coverage\n</code></pre> <pre><code># Run Pytest in Docker\nmake test-docker\n\n# Run Coverage in Docker\nmake coverage-docker\n</code></pre>"},{"location":"environment/#documentation-environment","title":"Documentation Environment","text":"<p> Install only the documentation dependencies.</p> with Poetrywith Pip <pre><code>(.venv) poetry install --only docs\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-docs.txt\n</code></pre> <p>  Run Mkdocs documentation.</p> <p>Run Locally and access the web page at http://127.0.0.1:8000.</p> <pre><code># Serve MkDocs\n(.venv) make docs\n</code></pre>"},{"location":"environment/#requirements-files","title":"Requirements Files","text":"<p>You can generate multiple requirements files for different purposes.</p> <pre><code># Requirements only for the Application dependencies\n(.venv) make req\n\n# Requirements for the Application with Development dependencies\n(.venv) make req-dev\n\n# Requirements for the Documentation dependencies\n(.venv) make req-docs\n\n# Requirements for the Tests dependencies\n(.venv) make req-test\n\n# Requirements for All dependencies\n(.venv) make req-all\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#clone","title":"Clone","text":"<p>First you need to clone the project source code from the GitHub repository:  https://github.com/mauprogramador/scopus-survey-api </p> <p>On the Bash terminal using Git:</p> <pre><code>git clone https://github.com/mauprogramador/scopus-survey-api.git\n</code></pre> <p> On VsCode using Git Extension:</p> <ul> <li>Open the Command Palette and press <code>Ctrl</code> + <code>Shift</code> + <code>P</code> or <code>F1</code>.</li> <li>Select the <code>Git: Clone</code> command and click on it.</li> <li>Paste the repository URL:</li> </ul> <pre><code>https://github.com/mauprogramador/scopus-survey-api.git\n</code></pre> <ul> <li>Press <code>Enter</code> or click on <code>Clone from URL</code> and select a directory.</li> </ul> <p>Tip</p> <p>Take a look at Git Source Control Documentation in VsCode.</p>"},{"location":"getting-started/#run","title":"Run","text":"PoetryPipDocker <pre><code># Setup Venv\nmake setup\n\n# Activate Venv\nsource .venv/bin/activate\n\n# Install dependencies\n(.venv) make install\n\n# Run the App locally\n(.venv) make run\n</code></pre> <pre><code># Setup Venv\nmake setup\n\n# Activate Venv\nsource .venv/bin/activate\n\n# Install dependencies\n(.venv) pip3 install -r requirements/requirements.txt\n\n# Run the App locally\n(.venv) make run\n</code></pre> <pre><code># Run the App in Docker Container\nmake docker\n</code></pre>"},{"location":"getting-started/#web-application","title":"Web Application","text":"<p>Once you start the application you can access the Application Web Page at:  http://127.0.0.1:8000/scopus-survey/api</p> <p></p> <p>Tip</p> <p>Select your preferred language by clicking the button next to the flag in the top right corner. Currently supported are English (<code>en-us</code>) and Portuguese (<code>pt-br</code>).</p> <p>On the web page, click on the fields and enter your data, making sure they are correct:</p> <ul> <li>Enter your <code>API Key</code> and <code>Keywords</code> in the respective fields.</li> <li>Enter one <code>Keyword</code> for each field.</li> <li>It is required to fill in the <code>API Key</code> field and at least two <code>Keywords</code> fields.</li> <li>Click on the Search Articles button and wait for the search results.</li> </ul> <p></p> <p>All fields on the web page are configured to verify that the information in each respective field is correct, so you must be aware of the rules and conditions regarding the <code>API Key</code> and the <code>Keywords</code> provided in the requirements section.</p> <p>As soon as you start typing in a field, it will automatically give you feedback, so stay tuned:</p> <ul> <li>Remember that it is required to fill in the <code>API Key</code> field and at least two <code>Keywords</code> fields.</li> <li>The red color will circe the field and a message will be shown if the data is incorrect.</li> <li>The green color will circle the field if the data is correct.</li> </ul> <p></p> <p>If any article is successfully found, a message will return informing you of success and a CSV file containing all the search information will be automatically downloaded.</p> <p></p> <p>If no article is found, a message will return informing what went wrong. You should first read and analyze the message and try to understand what caused the error before trying again.</p> <p></p> <p>You can also check the request response in the browser's DevTools inspect.</p> <p></p>"},{"location":"getting-started/#table-of-articles","title":"Table of Articles","text":"<p>After successfully completing the search processing, in addition to downloading the CSV file, the Show Table button will also be released, and when you click on it you will be redirected to a new page in which a table will display a preview of all the article data found.</p> <p></p> <p>The table below exemplifies the results of a search. Using Computer Vision, Scopus and Machine Learning as <code>Keywords</code>, a total of 71 articles were found. There was no loss due to similarity and it took around 18704.65ms.</p> <p></p> <p>Note</p> <p>Click here to download the CSV file of the search example above.</p>"},{"location":"getting-started/#interactive-swagger","title":"Interactive Swagger","text":"<p>Once you start the application you can access the Swagger UI at http://127.0.0.1:8000.</p> <p></p> <p>Select the Endpoint <code>/search-articles</code> and click on the Try it out button.</p> <ul> <li>Enter your <code>API Key</code> and <code>Keywords</code>.</li> <li>The <code>Keywords</code> must be separated by a comma.</li> <li>It is mandatory to fill in the <code>API Key</code> field and at least two <code>Keywords</code>.</li> <li>The <code>X-Access-Token</code> header will be setted automatically, you should not change it.</li> <li>Click on the Execute button.</li> </ul> <p></p> <p>If any article is successfully found, a CSV file containing all the search information will be returned. You can click on the Download button to download the file.</p> <p></p> <p>If no article is found, a message will return informing what went wrong. You should first read and analyze the message and try to understand what caused the error before trying again.</p> <p></p>"},{"location":"glossary/","title":"Glossary","text":"<code>API</code> <p>Application Program Interface A way for two or more computer programs or components to communicate with each other.</p> <code>Bash</code> <p>Bourne Again SHell Shell program and command language developed for the GNU Project.</p> <code>Cache</code> <p>Mechanism that temporarily stores data so that future requests for that data can be fulfilled more quickly.</p> <code>Client-Side</code> <p>Refers to operations that are performed by the client on a computer network, such as a web browser, which runs on a user's local device and connects to a server as needed.</p> <code>Cluster</code> <p>A group of servers/computers that work together and act as a single system.</p> <code>Commit</code> <p>Operation that records and sends the latest source code changes to the repository.</p> <code>CORS</code> <p>Cross-Origin Resource Sharing Mechanism to safely allows a web page to access restricted resources from a server on a domain different than the domain that served the web page.</p> <code>CSV</code> <p>Comma-Separated Values Text file format that stores comma-separated tabular data in plain text.</p> <code>CSS</code> <p>Cascading Style Sheets Style sheet language used for specifying the presentation and styling of a document written in a markup language such as HTML.</p> <code>Deploy</code> <p>Process of making a software/application available for use.</p> <code>DevTools</code> <p>Web Developer Tools A set of tools that allows developers to test, modify, and debug their websites.</p> <code>DTO</code> <p>Data Transfer Object An object that transports data between processes or layers of an application and contains no business logic beyond storing, retrieving, serializing, and deserializing data.</p> <code>Endpoint</code> <p>Refers to a path (URL) that acts as an access point to application resources to perform operations or obtain information.</p> <code>Epoch</code> <p>Is the number of seconds that have elapsed since January 1, 1970, also known as Unix time.</p> <code>Exception</code> <p>An unexpected anomalous or exceptional condition encountered during program execution that interrupts the normal flow.</p> <code>Flattening</code> <p>Process of transforming a nested JSON data structure into a single level of key-value pairs.</p> <code>Git</code> <p>A version control system that tracks and manages versions (change records) of files.</p> <code>GitHub</code> <p>A platform that allows developers to create, store, manage, and share their code with Git.</p> <code>Graceful Shutdown</code> <p>A controlled and orderly process to perform a safe shutdown and free up resources when the application is suddenly interrupted or receives a shutdown/kill signal.</p> <code>HTML</code> <p>Hypertext Markup Language Standard language for markup and structuring web content.</p> <code>HTTP</code> <p>Hypertext Transfer Protocol Application layer protocol for transmission of hypermedia documents on the web.</p> <code>ISO (8601 - Date Format)</code> <p>International Organization for Standardization A standard for representing dates and times internationally using a numerical system.</p> <code>JSON</code> <p>JavaScript Object Notation Serializable file format for data exchange that stores and transmits data objects and arrays of attribute-value pairs.</p> <code>Lint</code> <p>Static code analysis tool used to flag programming errors and bugs.</p> <code>Middleware</code> <p>Mechanism that work in the application's request-response cycle, intercepting and processing calls, and accessing and manipulating each request/response object.</p> <code>MIT (License)</code> <p>Massachusetts Institute of Technology License Permissive open source software license.</p> <code>MDN (Web Docs)</code> <p>Mozilla Developer Network Documentation repository and learning resources on web standards and developer guides.</p> <code>Pip</code> <p>Package management system used to install and manage Python packages and libraries.</p> <code>Poetry</code> <p>Tool for dependency management and packaging in Python.</p> <code>Proxy</code> <p>Intermediary server application between the requesting client and the providing server of a resource, improving privacy, security, and performance in the process.</p> <code>Rate Limiting</code> <p>Mechanism that limits network traffic by controlling the number of requests that can be made within a given period of time.</p> <code>Repository</code> <p>Data structure that stores metadata, files, and records of changes made to those files.</p> <code>REST</code> <p>Refers to software architecture design constraints that bring about efficient, reliable, and scalable distributed systems.</p> <code>Retry</code> <p>Mechanism that automatically retries failed operations to recover from unexpected failures and continue functioning correctly.</p> <code>Route</code> <p>Refers to a path (URL) that is associated with a function that is executed when the route is matched.</p> <code>Serialization</code> <p>Process of converting data into a format with native data types that can be stored, manipulated, or transmitted later using a serializer model.</p> <code>Server-Side</code> <p>Refers to operations that are performed by the server on a computer network, such as processing data and requests and executing business logic.</p> <code>Session</code> <p>Mechanism that persists certain parameters and reuse the same connection across all requests.</p> <code>Source Code</code> <p>Refers to the code/algorithm written in human-readable form in a programming language to control the behavior of a computer.</p> <code>Swagger</code> <p>Set of tools to assist in the development, design and documentation of APIs.</p> <code>Throttling</code> <p>Mechanism that controls the rate of data flow into a service by limiting the number of API requests a user can make in a certain period.</p> <code>URI</code> <p>Uniform Resource Identifier A unique sequence of characters that identifies an abstract or physical resource, such as resources on a webpage, mail address, and real-world objects.</p> <code>URL</code> <p>Uniform Resource Locator It is the reference/path/address to access a resource that is located on a computer network, such as a web page or a file on the internet.</p> <code>Validation</code> <p>Process of checking the accuracy and quality of source data, using logical rules and constraints to ensure that it is correct and useful before using or processing it further.</p> <code>Venv</code> <p>Virtual Environment Python module to create virtual environments, an isolated directory where an independent set of packages/libraries can be installed.</p> <code>Versioning</code> <p>Process of assigning a unique name/number to each state/version of a software.</p> <code>VPN</code> <p>Virtual Private Network Network architecture to virtually establish a private network connection between other networks, creating a tunnel that encrypts your data ensuring protection and security.</p> <code>VsCode</code> <p>Visual Studio Code Source code editor with support for multiple programming languages and runtime environments, plus customization and development features.</p> <code>Web Scraping</code> <p>Refers to the automated process of searching and extracting/scraping specific data from a web page for further processing.</p> <code>Workflows (GitHub)</code> <p>Configurable automated process that will perform one or more tasks when triggered by an event or manually in your repository.</p>"},{"location":"hooks-actions/","title":"Hooks and Actions","text":"<p>When developing an application, it's common to use different technologies to ensure the good condition of the code and its functioning. To do this, we can use verification and integration tools when certain important actions occur in code versioning.</p>"},{"location":"hooks-actions/#git-hooks","title":"Git Hooks","text":"<p>Below is the client-side Git Hook script used in this application, it is called <code>pre-commit</code> because it is the first that will be automatically run locally when a commit occurs, and will perform certain checking actions depending on the files that have been changed and are being committed.</p> <ul> <li>Run the Lint when files from the <code>app</code> folder are committed.</li> <li>Run the Lint when files from the <code>tests</code> folder are committed.</li> <li>Run the Vulnerability Audit when files from the <code>requirements</code> folder are committed, which means new libraries, packages or dependencies have been installed.</li> <li>Run the Tests anyway, ensuring everything is working.</li> </ul> pre-commit<pre><code>#!/bin/bash\n\nmake format\n\nif git diff --cached --name-only | grep -q '^app/'; then\n  make lint\nfi\n\nif git diff --cached --name-only | grep -q '^tests/'; then\n  make lint-tests\nfi\n\nif git diff --cached --name-only | grep -q '^requirements/'; then\n  make audit\nfi\n\nmake test\n</code></pre> <p>Tip</p> <p>Don't forget to grant the necessary permissions to the hook file. <pre><code>chmod +x .git/hooks/pre-commit\n</code></pre></p>"},{"location":"hooks-actions/#github-actions","title":"GitHub Actions","text":"<p>On the server-side, this application uses GitHub Actions to create workflows that will automatically trigger when a <code>push</code> event occurs to the remote GitHub repository, automating verification and deployment jobs to run automatically.</p>"},{"location":"hooks-actions/#verification-job","title":"Verification Job","text":"<p>For Linting and Testing, it will check the repository, configure Python3, install Poetry, load cached venv, and install all necessary dependencies like Pytest and Pylint to perform lint and test operations on the code ensuring everything is fine.</p>"},{"location":"hooks-actions/#documentation-job","title":"Documentation Job","text":"<p>It will check the repository, configure Python3, load cached venv, and install the MkDocs and Material for MkDocs libraries to configure, deploy and publish the static application documentation web page, written in Markdown, and which will be hosted on GitHub Pages on GitHub's <code>github.io</code> domain.</p>"},{"location":"license/","title":"License","text":""},{"location":"license/#mit-license","title":"MIT License","text":"<p>Copyright \u00a9 2024 Maur\u00edcio da Silva Batista</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p> August, 2024</p> <p>Note</p> <p>You can also see the license file on GitHub.</p>"},{"location":"reference/","title":"Reference","text":"<p>Here is the Web API code or reference, providing details about the classes, methods, parameters, attributes, and each part of this application.</p> <pre><code>.\n\u251c\u2500\u2500 app\n\u2502   \u251c\u2500\u2500 adapters/\n\u2502   |   \u251c\u2500\u2500 factories/\n\u2502   |   \u251c\u2500\u2500 gateway/\n\u2502   |   \u251c\u2500\u2500 helpers/\n|   |   \u2514\u2500\u2500 presenters/\n\u2502   \u251c\u2500\u2500 core/\n\u2502   |   \u251c\u2500\u2500 common/\n\u2502   |   \u251c\u2500\u2500 config/\n\u2502   |   \u251c\u2500\u2500 data/\n\u2502   |   \u251c\u2500\u2500 domain/\n|   |   \u2514\u2500\u2500 usecases/\n\u2502   \u251c\u2500\u2500 framework/\n\u2502   |   \u251c\u2500\u2500 dependencies/\n\u2502   |   \u251c\u2500\u2500 exceptions/\n\u2502   |   \u251c\u2500\u2500 fastapi/\n\u2502   |   \u2514\u2500\u2500 middleware/\n\u2502   \u2514\u2500\u2500 utils/\n</code></pre> <p></p>"},{"location":"reference/#searchparams","title":"SearchParams","text":"<p> Type validator for API Key and Keywords search params <code>source code</code> <code>core.common</code> <code>app/core/common/types.py</code></p> <pre><code>class SearchParams(\n    api_key: str = Field(),\n    keywords: Keywords = Field()\n)\n</code></pre> <p>A model validator built using Pydantic <code>BaseModel</code> for the API Key and Keywords parameters used in the Scopus Search API search, validating their typing and values using the Pydantic <code>Field()</code> function.</p> <p>Note</p> <p>Read more about the API Key and Keywords rules and specifications in the requirements section.</p> Parameter Type Description <code>api_key</code> <code>str</code> API Key search parameter <code>keywords</code> <code>Keywords</code> Keywords search parameter <p></p>"},{"location":"reference/#scopusresult","title":"ScopusResult","text":"<p> Serializer for entry field item in response JSON schema <code>source code</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusResult(\n    link: str = Field(),\n    url: str = Field()\n    scopus_id: str = Field()\n)\n</code></pre> <p>A model serializer built using Pydantic <code>BaseModel</code> for the entry items in the Scopus Search API search response, parsing them in code using the Pydantic <code>Field()</code> function.</p> Parameter Type JSON Field Description <code>link</code> <code>str</code> <code>@_fa</code> Top-level navigation links <code>url</code> <code>str</code> <code>prism:url</code> Content Abstract Retrieval API URI <code>scopus_id</code> <code>str</code> <code>dc:identifier</code> Article Scopus ID <p></p>"},{"location":"reference/#scopussearch","title":"ScopusSearch","text":"<p> Serializer for Scopus Search API response JSON schema <code>source code</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusSearch(\n    total_results: int = Field(),\n    items_per_page: int = Field(),\n    entry: list[ScopusResult] = Field()\n)\n</code></pre> <p>A model serializer built using the Pydantic <code>BaseModel</code> for the Scopus Search API JSON response, parsing it in code using the Pydantic <code>Field()</code> function.</p> <p>Before validation, it will access the <code>search-results</code> JSON field to flatten the hierarchy and get the actual data.</p> <p>Info</p> <p>Flattening is the process of transforming a nested JSON data structure into a single level of key-value pairs.</p> Parameter Type JSON Field Description <code>total_results</code> <code>int</code> <code>opensearch:totalResults</code> Total number of articles found <code>items_per_page</code> <code>int</code> <code>opensearch:itemsPerPage</code> Number of articles divided into each page <code>entry</code> <code>list[ScopusResult]</code> <code>entry</code> Lists of article data with the fields specified in the search <p>Note</p> <p>Read more about the returned JSON body and its fields.</p>"},{"location":"reference/#pages_count","title":"pages_count","text":"<pre><code>def pages_count() -&gt; int\n</code></pre> <p>Calculates the number of pages by dividing the total results by the number of items per page, returning the smallest <code>int</code> using the math <code>ceil()</code> function.</p> <p></p>"},{"location":"reference/#scopusquotaratelimit","title":"ScopusQuotaRateLimit","text":"<p> Serializer for Scopus APIs responses <code>source code</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusQuotaRateLimit(\n    reset: float = Field(),\n    status: str = Field(),\n    error_code: str = Field()\n)\n</code></pre> <p>A model serializer built using Pydantic <code>BaseModel</code> for the Scopus APIs responses, parsing them in code using the Pydantic <code>Field()</code> function.</p> <p>Before validation, it will retrieve the response headers and get the <code>error-response</code> response JSON field if present.</p> Parameter Type Response Field Description <code>reset</code> <code>float</code> <code>X-RateLimit-Reset</code> Date/Time in Epoch seconds when API quota resets <code>status</code> <code>str</code> <code>X-ELS-Status</code> Elsevier server/Scopus API status <code>error_code</code> <code>str</code> <code>error-code</code> Elsevier server/Scopus API error code <p>Info</p> <p>Epoch is the number of seconds that have elapsed since January 1, 1970, also known as Unix time.</p>"},{"location":"reference/#reset_datetime","title":"reset_datetime","text":"<pre><code>def reset_datetime() -&gt; str\n</code></pre> <p>Convert the epoch timestamp from the quota reset header to a <code>datetime</code>, format it, and return it as a more understandable <code>str</code> of the datetime, telling when the API request quota will be reset.</p>"},{"location":"reference/#quota_exceeded","title":"quota_exceeded","text":"<pre><code>def quota_exceeded() -&gt; bool\n</code></pre> <p>Check the value of the response status header, returning <code>True</code> if it is equal to <code>QUOTA_EXCEEDED - Quota Exceeded</code> and <code>False</code> otherwise.</p> <p>Note</p> <p>Learn more about the API request quota limit.</p>"},{"location":"reference/#rate_limit_exceeded","title":"rate_limit_exceeded","text":"<pre><code>def rate_limit_exceeded() -&gt; bool\n</code></pre> <p>Check the value of the response error code field, returning <code>True</code> if it is equal to <code>RATE_LIMIT_EXCEEDED</code> and <code>False</code> otherwise.</p> <p>Note</p> <p>Learn more about the API request throttling rate limit.</p> <p></p>"},{"location":"reference/#scopusabstract","title":"ScopusAbstract","text":"<p> Serializer for Scopus Abstract Retrieval API response JSON schema <code>source code</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusAbstract(\n    url: str = Field(),\n    scopus_id: str = Field(),\n    authors: str = Field(),\n    title: str = Field(),\n    publication_name: str = Field(),\n    abstract: str = Field(),\n    date: str = Field(),\n    eid: str = Field(),\n    doi: str = Field(),\n    volume: str = Field(),\n    citations: str = Field()\n)\n</code></pre> <p>A model serializer built using the Pydantic <code>BaseModel</code> for the Scopus abstracts of the articles in the JSON response, parsing them in code using the Pydantic <code>Field()</code> function and setting to <code>null</code> any fields that are not returned.</p> <p>Before validation, the hierarchy will be flattened to get the actual data. First, the <code>abstracts-retrieval-response</code> JSON field will be accessed, then the <code>authors</code> field will be set from the <code>author</code> JSON field, taken from the <code>authors</code> JSON field if returned or from the <code>dc:creator</code> JSON field otherwise.</p> <p>Info</p> <p>Flattening is the process of transforming a nested JSON data structure into a single level of key-value pairs.</p> <p>Additionally, the author names will be selected from the <code>ce:indexed-name</code> JSON field in the author data, to be concatenated and returned. Finally, the <code>coredata</code> JSON field will be accessed and updated with the author data before returning it.</p> <p>When deserialized into <code>dict</code>, the <code>date</code> field, when not <code>null</code>, will be formatted as <code>DD-MM-YYYY</code>.</p> Parameter Type JSON Field Description <code>url</code> <code>str</code> <code>link ref=scopus</code> Scopus article preview page URL <code>scopus_id</code> <code>str</code> <code>dc:identifier</code> Article Scopus ID <code>authors</code> <code>str</code> <code>authors</code> or <code>dc:creator</code> Complete author list or only the first author <code>title</code> <code>str</code> <code>dc:title</code> Article title <code>publication_name</code> <code>str</code> <code>prism:publicationName</code> Source title <code>abstract</code> <code>str</code> <code>dc:description</code> Article complete abstract <code>date</code> <code>str</code> <code>prism:coverDate</code> Publication date <code>eid</code> <code>str</code> <code>eid</code> Article Electronic ID <code>doi</code> <code>str</code> <code>prism:doi</code> Document Object Identifier <code>volume</code> <code>str</code> <code>prism:volume</code> Identifier for a serial publication <code>citations</code> <code>str</code> <code>citedby-count</code> Cited-by count <p>Note</p> <p>Read more about the returned fields in the Scopus Search Views documentation.</p> <p></p>"},{"location":"reference/#accesstoken","title":"AccessToken","text":"<p> Get and validate the Access Token <code>source code</code> <code>framework.dependencies</code> <code>app/framework/dependencies/access_token.py</code></p> <pre><code>class AccessToken()(\n    request: Request,\n    access_token: Annotated[str | None, TokenHeader] = None\n)\n</code></pre> <p>A route dependency that implements the <code>__call__</code> method to create a callable instance that will obtain and validate the Access Token header via the FastAPI <code>Header()</code> function or the request.</p> <p>To provide a little more security, the application will automatically generate a Token that will be passed to the application's API web page, which in turn will send it in the request header for validation.</p> Parameter Type Description <code>request</code> <code>Request</code> The FastAPI <code>Request</code> object <code>access_token</code> <code>str</code> or <code>None</code> Request Token header descriptor and validator. Default: <code>None</code> <p></p>"},{"location":"reference/#queryparams","title":"QueryParams","text":"<p> Get and validate the Query Params <code>source code</code> <code>framework.dependencies</code> <code>app/framework/dependencies/query_params.py</code></p> <pre><code>class QueryParams()(\n    request: Request,\n    api_key: Annotated[str | None, APIKeyQuery] = None,\n    keywords: Annotated[Keywords | None, KeywordsQuery] = None\n)\n</code></pre> <p>A route dependency that implements the <code>__call__</code> method to create a callable instance that will obtain and validate the API Key and Keywords query parameters via the FastAPI <code>Query()</code> function or the request.</p> Parameter Type Description <code>request</code> <code>Request</code> The FastAPI <code>Request</code> object <code>api_key</code> <code>str</code> or <code>None</code> Request API Key Query Param descriptor and validator. Default: <code>None</code> <code>keywords</code> <code>Keywords</code> or <code>None</code> Request Keywords Query Param descriptor and validator. Default: <code>None</code>"},{"location":"reference/#equals","title":"equals","text":"<pre><code>def equals(api_key: str, keywords: list[str]) -&gt; bool\n</code></pre> <p>Compares the instance's API Key and Keywords with another API Key and Keywords, returns <code>True</code> if they are equal and <code>False</code> otherwise.</p> Parameter Type Description <code>api_key</code> <code>str</code> API Key to comparison <code>keywords</code> <code>list[str]</code> Keywords to comparison"},{"location":"reference/#to_dict","title":"to_dict","text":"<pre><code>def to_dict() -&gt; dict[str, str | Keywords]\n</code></pre> <p>Serializes the API Key and Keywords instance attributes as a <code>dict</code>.</p> <p></p>"},{"location":"reference/#httpretryhelper","title":"HTTPRetryHelper","text":"<p> Make HTTP requests with throttling and retry mechanisms <code>source code</code> <code>adapters.helpers</code> <code>app/adapters/helpers/http_retry_helper.py</code></p> <pre><code>class HTTPRetryHelper(\n    for_search: bool = None\n)\n</code></pre> <p>An HTTP client for making requests with the following mechanisms:</p> <ul> <li>Throttling: control the rate of data flow into a service by limiting the number of API requests a user can make in a certain period.</li> <li>Retry: automatically retry failed operations to recover from unexpected failures and continue functioning correctly.</li> <li>Rate Limiting: limits network traffic by controlling the number of requests that can be made within a given period of time.</li> <li>Session: persist certain parameters and reuse the same connection across all requests.</li> <li>Cache: temporarily stores data so that future requests for that data can be fulfilled more quickly.</li> </ul> Parameter Type Description <code>for_search</code> <code>bool</code> Indicates in the log message whether the request will be directed to the Scopus Search API or not. Default: <code>None</code>"},{"location":"reference/#mount_session","title":"mount_session","text":"<pre><code>def mount_session(headers: Headers) -&gt; None\n</code></pre> <p>Initializes the session and mounts it by registering the cache-control connection adapter with the retry configuration.</p> Parameter Type Description <code>headers</code> <code>Headers</code> The HTTP headers to send in the request"},{"location":"reference/#close","title":"close","text":"<pre><code>def close() -&gt; None\n</code></pre> <p>Closes the cache-control connection adapter and session.</p>"},{"location":"reference/#request","title":"request","text":"<pre><code>def request(url: str) -&gt; Response\n</code></pre> <p>Initialize, prepare with session, send the request, and then returns the response as a Requests <code>Response</code> object.</p> Parameter Type Description <code>url</code> <code>str</code> The URL to send the request to <p></p>"},{"location":"reference/#urlbuilderhelper","title":"URLBuilderHelper","text":"<p> Generate and format URLs for HTTP requests <code>source code</code> <code>adapters.helpers</code> <code>app/adapters/helpers/url_builder_helper.py</code></p> <pre><code>class URLBuilderHelper()\n</code></pre> <p>A builder to generate Scopus APIs resource URLs and pagination URL.</p>"},{"location":"reference/#get_search_url","title":"get_search_url","text":"<pre><code>def get_search_url(keywords: Keywords) -&gt; str\n</code></pre> <p>Generates Scopus Search API resource URL and returns it as a <code>str</code>.</p> Parameter Type Description <code>keywords</code> <code>Keywords</code> The keywords that will be used in the search"},{"location":"reference/#get_pagination_url","title":"get_pagination_url","text":"<pre><code>def get_pagination_url(page: int) -&gt; str\n</code></pre> <p>Generates Scopus Search API pagination URL and returns it as a <code>str</code>.</p> Parameter Type Description <code>page</code> <code>int</code> The page index for the start of pagination"},{"location":"reference/#get_article_page_url","title":"get_article_page_url","text":"<pre><code>def get_abstract_url(url: str) -&gt; str\n</code></pre> <p>Generates Scopus Abstract Retrieval API resource URL and returns it as a <code>str</code>.</p> Parameter Type Description <code>url</code> <code>str</code> The Scopus Abstract Retrieval API base resource URL <p></p>"},{"location":"reference/#scopussearchapi","title":"ScopusSearchAPI","text":"<p> Search and retrieve articles via the Scopus Search API <code>source code</code> <code>adapters.gateway</code> <code>app/adapters/gateway/scopus_search_api.py</code></p> <pre><code>class ScopusSearchAPI(\n    http_helper: HttpRetry,\n    url_builder: UrlBuilder\n)\n</code></pre> <p>First, the request headers for the Scopus API will be built with the <code>API Key</code>, the resource URL is built with the <code>API Key</code> and <code>Keywords</code> as search parameters, and then the articles will be searched via the Scopus Search API. Then, the response is validated, retrieving the articles if successful, or handling errors otherwise.</p> <p>An error will be returned when: no articles are found, the <code>API Key</code> quota is exceeded, the Scopus Search API returns a HTTP status error, and when the JSON response cannot be validated.</p> <p>Note</p> <p>Read more about the quota of how much data an API Key can retrieve.</p> <p>The articles data will be validated, defaulting to <code>null</code> for fields that are not returned. It may use threads with the ThreadPoolExecutor and build the URL with the page index when there are multiple articles to fetch with pagination.</p> Parameter Type Description <code>http_helper</code> <code>HttpRetry</code> Injects <code>HttpRetryHelper</code> to make the requests <code>url_builder</code> <code>UrlBuilder</code> Injects <code>UrlBuilderHelper</code> to build the URLs"},{"location":"reference/#search_articles","title":"search_articles","text":"<pre><code>def search_articles(search_params: SearchParams) -&gt; list[ScopusResult]\n</code></pre> <p>Searches for articles via Scopus Search API, compiles and returns all retrieved data in a <code>list</code> of <code>ScopusResult</code>.</p> Parameter Type Description <code>search_params</code> <code>SearchParams</code> Validated API Key and Keywords search parameters <p></p>"},{"location":"reference/#scopusabstractretrievalapi","title":"ScopusAbstractRetrievalAPI","text":"<p> Retrieves Scopus abstracts via the Scopus Abstract Retrieval API <code>source code</code> <code>adapters.gateway</code> <code>app/adapters/gateway/scopus_abstract_retrieval_api.py</code></p> <pre><code>class ScopusAbstractRetrievalAPI(\n    http_helper: HttpRetry,\n    url_builder: UrlBuilder\n)\n</code></pre> <p>First, the request headers to the Scopus API will be built with the <code>API Key</code>, the resource URL is built from the base resource URL, and then the Scopus abstracts will be retrieved via the Scopus Abstracts Retrieval API. The response is then validated, retrieving the abstracts if successful or handling errors otherwise.</p> <p>An error will be returned when: the <code>API Key</code> quota is exceeded, the Scopus Abstract Retrieval API returns an HTTP status error, and when the JSON response cannot be validated.</p> <p>The abstracts data will be validated, defaulting to <code>null</code> for fields that are not returned. It can use threads with the ThreadPoolExecutor when there are multiple abstracts to retrieve.</p> Parameter Type Description <code>http_helper</code> <code>HttpRetry</code> Injects <code>HttpRetryHelper</code> to make the requests <code>url_builder</code> <code>UrlBuilder</code> Injects <code>UrlBuilderHelper</code> to build the URLs"},{"location":"reference/#retrieve_abstracts","title":"retrieve_abstracts","text":"<pre><code>def retrieve_abstracts(api_key: str, entry: list[ScopusResult]) -&gt; DataFrame\n</code></pre> <p>Retrieves Scopus abstracts via the Scopus Abstract Retrieval API, compiles and returns all fetched data into a Pandas <code>DataFrame</code>.</p> Parameter Type Description <code>api_key</code> <code>str</code> Validated <code>API Key</code> search parameter <code>entry</code> <code>list[ScopusResult]</code> List of articles data <p></p>"},{"location":"reference/#articlessimilarityfilter","title":"ArticlesSimilarityFilter","text":"<p> Filter articles from identical authors with similar titles <code>source code</code> <code>core.usecases</code> <code>app/core/usecases/articles_similarity_filter.py</code></p> <pre><code>class ArticlesSimilarityFilter()\n</code></pre> <p>From the <code>DataFrame</code> containing all the article information already gathered, the authors are counted, and those that were repeated at least twice are selected. Then, from the articles of these authors, their respective titles are selected and compared using the TheFuzz <code>ratio()</code> function, and those whose similarity rate is at least <code>80%</code> are gathered and discarded.</p> <p>Note</p> <p>After consideration and testing, we set the similarity ratio for the articles selection at <code>80%</code>.</p> <p>For all the similar articles gathered, the first one is kept and the rest are discarded. If all the authors are unique, meaning none are repeated, or no similar titles were found, it will return the same <code>DataFrame</code>.</p>"},{"location":"reference/#filter","title":"filter","text":"<pre><code>def filter(dataframe: DataFrame) -&gt; DataFrame\n</code></pre> <p>Filters articles from the <code>DataFrame</code> if they are from identical authors with similar titles, and then all filtered data will be returned in a Pandas <code>DataFrame</code>.</p> Parameter Type Description <code>dataframe</code> <code>DataFrame</code> The <code>DataFrame</code> containing all the gathered article information to be filtered <p></p>"},{"location":"reference/#scopusarticlesaggregator","title":"ScopusArticlesAggregator","text":"<p> Gathers, filters and compiles data from Scopus articles <code>source code</code> <code>core.usecases</code> <code>app/core/usecases/scopus_articles_aggregator.py</code></p> <pre><code>class ScopusArticlesAggregator(\n    search_api: SearchAPI,\n    abstract_api: AbstractAPI,\n    similarity_filter: SimilarityFilter\n)\n</code></pre> <p>First, articles are searched via Scopus Search API using the provided search parameters, and their Scopus abstracts are retrieved via Scopus Abstract Retrieval API.</p> <p>Next, articles that are exact duplicates are removed, those with the same authors and titles are also discarded, and similar articles are filtered using <code>ArticlesSimilarityFilter</code>.</p> <p>An error is returned when no articles are found.</p> Parameter Type Description <code>search_api</code> <code>SearchAPI</code> Injects <code>ScopusSearchAPI</code> to search and get the articles via the Scopus Search API <code>articles_scraper</code> <code>abstract_api</code> Injects <code>ScopusAbstractRetrievalAPI</code> to retrieve the Scopus abstracts via the ScopusAbstractRetrievalAPI <code>similarity_filter</code> <code>SimilarityFilter</code> Injects <code>ArticlesSimilarityFilter</code> to filter articles by identical authors with similar titles"},{"location":"reference/#get_articles","title":"get_articles","text":"<pre><code>def get_articles(params: SearchParams) -&gt; FileResponse\n</code></pre> <p>Gathers and filters data from Scopus articles, writes and saves all remaining articles to a CSV file, and returns them as a FastAPI <code>FileResponse</code> object.</p> Parameter Type Description <code>params</code> <code>SearchParams</code> The validated API Key and Keywords search parameters <p></p>"},{"location":"reference/#templatecontextbuilder","title":"TemplateContextBuilder","text":"<p> Generates context values for template responses <code>source code</code> <code>adapters.presenters</code> <code>app/adapters/presenters/template_context.py</code></p> <pre><code>class TemplateContextBuilder(\n    request: Request\n)\n</code></pre> <p>Compiles and builds data, such as context values, for the templates that Jinja renders, passing them and loading them into HTML templates that are returned as a Jinja2Templates <code>TemplateResponse</code> object.</p> Parameter Type Description <code>request</code> <code>Request</code> The FastAPI <code>Request</code> object"},{"location":"reference/#get_web_app_context","title":"get_web_app_context","text":"<pre><code>def get_web_app_context() -&gt; Context\n</code></pre> <p>Returns data to build the API web page response template, returning the request object, template name, and context values.</p> <p>About the Context values:</p> Field Description <code>request</code> The FastAPI <code>Request</code> object <code>version</code> Application version. Example: <code>3.0.0</code> <code>repository</code> URL of the application's GitHub repository <code>swagger_url</code> Swagger page URL. Default: <code>/</code> <code>token</code> Application Token <code>filename</code> CSV filename. Default: <code>articles.csv</code> <code>table_url</code> Table web page URL. Default: <code>/scopus-survey/api/table</code> <code>search_url</code> API URL. Default: <code>/scopus-survey/api/search-articles</code> <code>description</code> Application description"},{"location":"reference/#get_table_context","title":"get_table_context","text":"<pre><code>def get_table_context() -&gt; Context\n</code></pre> <p>Returns data to build the Table web page response template, returning the request object, template name, and context values.</p> <p>About the Context values:</p> Field Description <code>request</code> The FastAPI <code>Request</code> object <code>version</code> Application version. Example: <code>3.0.0</code> <code>repository</code> URL of the application's GitHub repository <code>swagger_url</code> Swagger page URL. Default: <code>/</code> <code>content</code> Table content. List of the articles found or <code>None</code> if there are no articles <code>web_app_url</code> Application web page URL. Default: <code>/scopus-survey/api</code> <p></p>"},{"location":"reference/#exceptionjson","title":"ExceptionJSON","text":"<p> Generates JSON representation responses for exceptions <code>source code</code> <code>adapters.presenters</code> <code>app/adapters/presenters/exception_json.py</code></p> <pre><code>class ExceptionJSON(\n    request: Request,\n    code: int,\n    message: str,\n    errors: Errors = None\n)\n</code></pre> <p>A presenter created using FastAPI <code>JSONResponse</code> that generates JSON representation responses for exceptions. The error details are filtered to remove the <code>PydanticUndefined</code> error from Pydantic <code>ValidationError</code> and the <code>Request</code> object data is retrieved.</p> <p>The datetime timestamp is set as a <code>str</code> in ISO format and finally all data is converted and encoded using the FastAPI <code>jsonable_encoder()</code> function.</p> Parameter Type Description <code>request</code> <code>Request</code> The FastAPI <code>Request</code> object <code>code</code> <code>int</code> HTTP status error code <code>message</code> <code>str</code> Exception description <code>errors</code> <code>Errors</code> Error metadata and details <p></p>"},{"location":"reference/#exceptions-and-errors","title":"Exceptions and Errors","text":"<p>HTTP Exceptions are models built from FastAPI <code>HTTPException</code> that represent HTTP error status codes sent in the response to notify the client using your application of an error. The ones implemented are <code>401 Unauthorized</code>, <code>404 NotFound</code>, <code>422 UnprocessableContent</code>, <code>500 InternalError</code>, <code>502 BadGateway</code> and <code>504 GatewayTimeout</code>.</p> <p>Application Errors are models built from the base class <code>Exception</code> that indicates that an error has occurred in the core part of the application's operation/processing. The ones implemented are <code>InterruptError</code> for the shutdown/exit interrupt signal and <code>ScopusAPIError</code> for the Scopus Search API HTTP status error.</p> <p>Exception Handlers are routines designed to process and respond quickly to the occurrence of exceptions/errors or specific special situations during the execution of a program, returning their JSON representation. The implemented handlers are for Starlette <code>HTTPException</code>, FastAPI <code>HTTPException</code>, <code>RequestValidationError</code>, <code>ResponseValidationError</code>, <code>ValidationError</code>, <code>HTTPException</code>, <code>ApplicationError</code> and <code>Exception</code>.</p> <p>About the Exception JSON Response:</p> Field Type Description <code>success</code> <code>bool</code> Result of the operation, which is a failure since it is an exception. Deafult: <code>False</code> <code>code</code> <code>int</code> HTTP error status code <code>message</code> <code>str</code> Exception/error description <code>request</code> <code>dict[str,Any]</code> Contains some request data in a <code>dict</code> <code>errors</code> <code>Errors</code> Contains some details of the exception/error in a <code>dict</code>. Deafult: <code>None</code> <code>timestamp</code> <code>str</code> The datetime timestamp as a <code>str</code> in ISO format <p>About the <code>request</code> field:</p> Field Description <code>host</code> The request client host. Default: <code>127.0.0.1</code> <code>port</code> The request client port. Default: <code>8000</code> <code>method</code> The request method <code>url</code> The request URL path <code>headers</code> The request headers <p>About <code>ScopusAPIError</code> error details:</p> Field Description <code>status</code> The Scopus APIs HTTP status error code <code>api_error</code> The Scopus APIs response status error description. Deafult: <code>null</code> <code>content</code> The Scopus APIs JSON response content itself <p>Note</p> <p>See the responses status error description in the documentation.</p> <p></p>"},{"location":"reference/#middlewares","title":"Middlewares","text":"<p>Middlewares are mechanisms built on top of the Starlette <code>BaseHTTPMiddleware</code> that work in the application's request-response cycle, intercepting calls and processing them. They can access and manipulate each request object before it is processed by any route handlers, and also each response object before returning it. There are three implemented.</p> <p>The <code>TraceExceptionControl</code> middleware traces the request, reporting the client, the URL accessed, the response status code, and the processing time. It also handles any unexpected exceptions and signal-interrupt errors.</p> <p>The <code>RedirectNotFoundRoutes</code> middleware redirects any route not found request that receives a <code>404 Not Found</code> error and is not a mapped allowed route. It also handles signal-interrupt errors.</p> <p>The FastAPI <code>CORSMiddleware</code> middleware implements and configures the CORS mechanism, allowing any origin, any credentials, any header, and only the <code>GET</code> method.</p> <p></p>"},{"location":"reference/#signalhandler","title":"SignalHandler","text":"<p> Set signal handlers to set the shutdown event flag <code>source code</code> <code>utils</code> <code>app/utils/signal_handler.py</code></p> <pre><code>class SignalHandler(\n    for_async: bool = None\n)\n</code></pre> <p>Create an event object, either a threading <code>Event</code> or asyncio <code>Event</code> based on the parameter value, and register your handlers for the <code>SIGINT</code> and <code>SIGTERM</code> signals using the <code>signal()</code> function. The handlers will catch shutdown signals and set the event flag. Then, process-based or threaded operations can be terminated gracefully.</p> <p>Info</p> <p>A graceful shutdown is a controlled and orderly process to perform a safe shutdown and free up resources when the application is suddenly interrupted or receives a shutdown/kill signal.</p> Parameter Type Description <code>for_async</code> <code>bool</code> Indicates whether the event will be asynchronous or not. Default: <code>None</code>"},{"location":"release-notes/","title":"Release Notes","text":""},{"location":"release-notes/#v300-2024-09-30","title":"<code>v3.0.0</code>  2024-09-30","text":"<p>See the \u27f2 CHANGELOG to see all the commits.</p>"},{"location":"release-notes/#builds","title":"\ud83d\udd28 Builds","text":"<ul> <li>Remove BeautifulSoup</li> <li>Move and update Dockerfile</li> <li>Add dotenv to use <code>.env</code> variables</li> </ul>"},{"location":"release-notes/#features","title":"\u2728 Features","text":"<ul> <li>Handle scopus quota and rate errors</li> <li>Update serializers</li> <li>Add article page URL and rate limit</li> <li>Update sleep rate factor</li> <li>Remove <code>livereload</code> logs</li> <li>Only shows the QRCode when the host is open</li> <li>Change article page to abstract api, removing web scrapping</li> <li>Serialize data from abstract api</li> <li>Update scopus configs and urls for abstract api</li> <li>Search params as a dto</li> <li>Set new start point to <code>__main__</code></li> <li>Include <code>.env</code> and set container port</li> <li>Load <code>.env</code> variables to override app toml configuration</li> <li>Change fuzzywuzzy to thefuzz</li> <li>Add header and query types</li> <li>Add usecases, gateway, and middlewares</li> <li>Add http retry request</li> <li>Add url and template context builders</li> <li>Add abstract metaclasses</li> <li>Add dtos and serializers</li> <li>Add app exceptions</li> <li>Add exception json response serializer</li> <li>Add progress bar</li> <li>Add mobile qrcode</li> <li>Add shutdown signal handler</li> <li>Add types and regex patterns</li> <li>Add exception error messages</li> <li>Pagination to get all articles</li> <li>Stop multi threads on app interruption</li> <li>Add articles scraping progress log</li> <li>Make scraping data in multi thread</li> <li>Implement debug logs with JSON data</li> <li>Disable uvicorn access logging</li> <li>Set single logger instance to replace singleton</li> <li>Update validation token generator</li> <li>Add application configuration section</li> <li>Update templates and context with <code>pyproject</code> data</li> <li>Load <code>pyproject</code> application configuration</li> <li>Control logging in file</li> <li>Rename and remap folders to clean architecture</li> <li>Upgrade logger and implement logging instead of print</li> <li>Set date year automatically</li> <li>Change license to MIT</li> <li>Upgrade venv script</li> <li>Update favicon</li> </ul>"},{"location":"release-notes/#refactors","title":"\u267b\ufe0f Refactors","text":"<ul> <li>Remove handle quota and set default workers</li> <li>Remove web scrapping code</li> <li>Update contracts and logger</li> <li>Update names with acronyms</li> <li>Remove old tests</li> <li>Move and update CSS styles</li> <li>Move and add images</li> <li>Update javascripts, svgs, and templates</li> <li>Update context and routes metadata</li> <li>Update dependencies and factory</li> <li>Update exception handler and HTTP exceptions</li> <li>Update multiple properties in toml from <code>pyproject</code></li> <li>Add app, scopus, and fastapi configs</li> <li>Build Scopus api error attributes in class itself</li> </ul>"},{"location":"release-notes/#tests","title":"\ud83e\uddea Tests","text":"<ul> <li>Update multiple tests</li> <li>Add abstract API tests</li> <li>Add framewok, core, and adapters unit tests</li> <li>Add framewok, core, and adapters integration tests</li> <li>Add tests mocks and helpers</li> <li>Remove scraping code parts</li> <li>Update mocks and set static data instead using functions</li> <li>Remove scraper mock and move code from data to utils</li> <li>Add unit tests on dependencies</li> </ul>"},{"location":"release-notes/#chores","title":"\ud83d\udcdd Chores","text":"<ul> <li>Update readme information</li> <li>Update text, table columns, and context values</li> <li>Change favicon</li> <li>Update responsibility and showned columns</li> <li>Update REST Client</li> <li>Check if <code>.env</code> exists before include it</li> <li>Only run docs workflow when docs files are updated</li> <li>Add example of a <code>.env</code> config file</li> <li>Remove docker docs and update Dockerfile</li> <li>Rename from <code>venv</code> to <code>setup</code> and update it</li> <li>Add toml as app dependency</li> <li>Add language and extra data docs dependencies</li> <li>Change formatter to Black</li> </ul>"},{"location":"release-notes/#docs","title":"\ud83d\udcc4 Docs","text":"<ul> <li>Update releases notes to <code>v3</code></li> <li>Update MKDocs config and metadata</li> <li>Update and add more <code>pt-BR</code> docs</li> <li>Update and add more <code>en-US</code> docs</li> <li>Add overrides icons and partials HTML</li> <li>Add assets data, custom CSS, and all images</li> <li>Add <code>pyproject</code> configuration</li> <li>Fix translation alternate URL error</li> <li>Add fields examples, response body and count field config</li> <li>Add notes and remove count field config</li> <li>Upgrade article preview page example URL</li> </ul>"},{"location":"release-notes/#styles","title":"\ud83c\udfa8 Styles","text":"<ul> <li>Update swagger route description</li> <li>Update docstrings, messages and descriptions</li> <li>Rename shell script from venv to setup</li> </ul>"},{"location":"release-notes/#v200-2024-03-11","title":"<code>v2.0.0</code>  2024-03-11","text":"<p>See the \u27f2 CHANGELOG to see all the commits.</p>"},{"location":"release-notes/#features_1","title":"\u2728 Features","text":"<ul> <li>Add table web page, including HTML, CSS, and Javascript</li> <li>Add similarity filter</li> <li>Update HTTP helper with request retry mechanism</li> <li>Add table route, descriptions, and web tag</li> <li>Update pyproject metadata and add FuzzyWuzzy library</li> </ul>"},{"location":"release-notes/#tests_1","title":"\ud83e\uddea Tests","text":"<ul> <li>Update and add more tests</li> <li>Update and add mock data and helpers</li> </ul>"},{"location":"release-notes/#docs_1","title":"\ud83d\udcc4 Docs","text":"<ul> <li>Add CSV example and images assets</li> <li>Update getting started</li> <li>Add similarity filter</li> <li>Add hooks, actions, and new error</li> <li>Update links</li> </ul>"},{"location":"release-notes/#v100-2024-02-27","title":"<code>v1.0.0</code>  2024-02-27","text":"<p>See the \u27f2 CHANGELOG to see all the commits.</p>"},{"location":"release-notes/#features_2","title":"\u2728 Features","text":"<ul> <li>Add GitHub workflows</li> <li>Add static files, including CSS, Javascript, images and icons</li> <li>Add web application HTML templates</li> <li>Add application middleware, routes/endpoints, and data for swagger</li> <li>Add application dependencies to get query params and Access Token</li> <li>Add gateway for Scopus Search API, including HTTP helper</li> <li>Add logger and lifespan</li> <li>Add application core, including models, usecases, and interfaces</li> <li>Add HTTP exceptions, exception handler, and exception responses</li> </ul>"},{"location":"release-notes/#tests_2","title":"\ud83e\uddea Tests","text":"<ul> <li>Add all application test files</li> <li>Add helpers, models, and mock data</li> <li>Add REST Client file</li> </ul>"},{"location":"release-notes/#docs_2","title":"\ud83d\udcc4 Docs","text":"<ul> <li>Add Portuguese (<code>pt-BR</code>) documentation</li> <li>Add English (<code>en-US</code>) documentation</li> <li>Add Index and static images</li> <li>Add Mkdocs configuration file</li> </ul>"},{"location":"release-notes/#others","title":"\ud83d\udccc Others","text":"<ul> <li>Add all configuration files, including docker and requirements</li> </ul>"},{"location":"requirements/","title":"Requirements","text":""},{"location":"requirements/#api-key","title":"API Key","text":"<p>You must obtain an <code>API Key</code> to access the Scopus APIs to search and retrieve the articles' information. It has no spaces and is made up of 32 characters containing only letters and numbers. It can be obtained by accessing the Elsevier Developer Portal, clicking on the I want an API Key button and registering.</p> <p></p> <p>If you are part of an educational institution, you can try to confirm if your institution is registered with Elsevier to sign in via your organization, or you can also try to register with your academic email.</p>"},{"location":"requirements/#keywords","title":"Keywords","text":"<p>Based on the theme or subject of your research, you must select a minimum of two and a maximum of four <code>keywords</code>, which will be used as parameters and filters in the simultaneous search in the title, abstract and keywords of the articles. Each <code>keyword</code> must be written in English, containing only letters, numbers, spaces and underscores, with a minimum of 2 and a maximum of 50 characters.</p> <p>Example</p> <pre><code>Computer Vision, Scopus, Machine Learning, Bibliometric\n</code></pre>"},{"location":"requirements/#institutional-network","title":"Institutional Network","text":"<p>Please be aware that the <code>API Key</code> will only authenticate correctly if you submit it while inside your university/institution's network, and this does not include VPN or proxy access. Therefore, if you are fully remote and off-campus, the abstract and all authors of the articles will not be returned.</p>"},{"location":"responses-and-errors/","title":"Responses and Errors","text":"<p>Tip</p> <p>Read the MDN documentation about the HTTP response status code in MDN Web Docs.</p>"},{"location":"responses-and-errors/#successful","title":"Successful","text":""},{"location":"responses-and-errors/#200-ok","title":"<code>200 Ok</code>","text":"Route Response <code>/scopus-survey/api</code> Renders the application API web page <code>/scopus-survey/api/search-articles</code> Downloads the CSV file of found articles <code>/scopus-survey/api/table</code> Renders the articles table web page"},{"location":"responses-and-errors/#redirection","title":"Redirection","text":""},{"location":"responses-and-errors/#307-temporary-redirect","title":"<code>307 Temporary Redirect</code>","text":"<p>Any request URL that is not in the  <code>/scopus-survey/api</code> route will be redirected to it. Redirects any request that is trying to access a not found/non-existent route.</p>"},{"location":"responses-and-errors/#client-error","title":"Client Error","text":""},{"location":"responses-and-errors/#401-unauthorized","title":"<code>401 Unauthorized</code>","text":"Exception Message Description <code>Missing required API Key query parameter</code> Required <code>API Key</code> query parameter not found in the request <code>Missing required Access Token header</code> Required <code>Access Token</code> header not found in the request <code>Invalid Access Token</code> <code>Access Token</code> header has an invalid pattern or is incorrect"},{"location":"responses-and-errors/#404-not-found","title":"<code>404 Not Found</code>","text":"Exception Message Description <code>No articles found</code> No articles were found matching the <code>Keywords</code>.  The total search results are zero"},{"location":"responses-and-errors/#422-unprocessable-content","title":"<code>422 Unprocessable Content</code>","text":"Exception Message Description <code>Validation error in request &lt;{...}&gt;</code> FastAPI exception from Pydantic. The request contains invalid data/errors <code>Missing required Keywords query parameter</code> Required <code>Keywords</code> query parameter not found in the request <code>There must be at least two keywords</code> The number of <code>Keywords</code> is below the minimum required. Submit at least two <code>Keywords</code> to perform the search <code>Invalid Keyword</code> The <code>Keyword</code> submitted has an invalid pattern"},{"location":"responses-and-errors/#server-error","title":"Server Error","text":""},{"location":"responses-and-errors/#500-internal-error","title":"<code>500 Internal Error</code>","text":"Exception Message Description <code>Validation error in response &lt;{...}&gt;</code> FastAPI exception from Pydantic. The response contains invalid data/errors <code>Pydantic validation error: ... validation errors for ...</code> Pydantic exception. There is an error in the data being validated <code>Error in decoding response from Scopus API</code> JSON exception. The response body does not contain valid JSON to decode <code>Error in validate response from Scopus API</code> Serialization error. JSON response contains unmapped/invalid fields <code>Unexpected application interruption</code> Shutdown signal exit interrupt exception <code>Unexpected error &lt;...&gt;</code> Any unmapped/common exception"},{"location":"responses-and-errors/#502-bad-gateway","title":"<code>502 Bad Gateway</code>","text":"Exception Message Description <code>Invalid response from Scopus Search API</code> Response from Scopus Search API has no content/data <code>Invalid response from Scopus Abstract Retrieval API</code> Response from Scopus Abstract Retrieval API has no content/data <code>Connection error in request</code> A connection error occurred while trying to send the request <code>Unexpected error from request &lt;...&gt;</code> An unmapped error/exception occurred while trying to send the request <code>Invalid response from Scopus Search API</code> Scopus Search API HTTP status error exception <code>Invalid response from Scopus Abstract Retrieval API</code> Scopus Abstract Retrieval API HTTP status error exception"},{"location":"responses-and-errors/#504-gateway-timeout","title":"<code>504 Gateway Timeout</code>","text":"Exception Message Description <code>Request connection timeout</code> The request connection has timed out"},{"location":"responses-and-errors/#scopus-apis-status-error","title":"Scopus APIs Status Error","text":"<p>Tip</p> <p>Read the documentation about responses for the Scopus Search API and Scopus Abstract Retrieval API.</p> Status code Description 400 Invalid request. Invalid information submitted 401 User cannot be authenticated due to missing/invalid credentials 403 User cannot be authenticated or entitlements cannot be validated 429 The requester has exceeded the quota limits associated with their <code>API Key</code> 500 Scopus API internal processing error"},{"location":"scopus-abstract-retrieval-api/","title":"Scopus Abstract Retrieval API","text":"<p>After obtaining the Scopus IDs of the articles, the next step is to use them to retrieve all the information about each article. We will use the Scopus Abstract Retrieval API, provided by Elsevier, to retrieve the Scopus abstracts with rich article metadata of all the articles.</p> <p>Info</p> <p>In the old version <code>v2.0.0</code>, we web scraped the Scopus article preview page using BeautifulSoup, but we have now abandoned this practice.</p>"},{"location":"scopus-abstract-retrieval-api/#api-resource-url","title":"API Resource URL","text":"<p>We need to request the below URL and pass some parameters to get the Scopus abstract.</p> <pre><code>https://api.elsevier.com/content/abstract/scopus_id\n</code></pre>"},{"location":"scopus-abstract-retrieval-api/#scopus-id","title":"Scopus ID","text":"<p>To retrieve a Scopus abstract of a specific article, we need to set the <code>scopus_id</code> path parameter, which refers to a unique Scopus identifier assigned to each Scopus article/abstract.</p> <pre><code>/{scopus_id}\n</code></pre> <p> Example with SCOPUS_ID:85197125619 as Scopus ID:</p> <pre><code>/SCOPUS_ID:85197125619\n</code></pre>"},{"location":"scopus-abstract-retrieval-api/#fields","title":"Fields","text":"<p>By specifying the Scopus Fields, we can filter the response and get only the desired information of the articles.</p> <pre><code>field=field1,field2,field3,...\n</code></pre> <p> Example with all fields used:</p> <pre><code>field=dc:identifier,eid,dc:title,dc:description,prism:publicationName,citedby-count,prism:volume,prism:coverDate,prism:doi,dc:creator,authors\n</code></pre>"},{"location":"scopus-abstract-retrieval-api/#request-headers","title":"Request Headers","text":"<p>The headers include in the request. One of them specifies your <code>API Key</code>.</p> <pre><code>\"Accept-Language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7\",\n\"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\",\n\"Accept-Encoding\": \"gzip, deflate, br\",\n\"Referer\": \"https://www.scopus.com/\",\n\"Origin\": \"https://www.scopus.com\",\n\"Content-Type\": \"application/json\",\n\"Accept\": \"application/json\",\n\"User-Agent\": \"Mozilla/5.0\",\n\"Connection\": \"keep-alive\",\n\"X-ELS-APIKey\": \"Your API Key\",\n</code></pre>"},{"location":"scopus-abstract-retrieval-api/#final-url","title":"Final URL","text":"<p>This is an example of a complete URL with all the parameters we requested.</p> <pre><code>https://api.elsevier.com/content/abstract/scopus_id/SCOPUS_ID:85197125619&amp;field=dc:identifier,eid,dc:title,dc:description,prism:publicationName,citedby-count,prism:volume,prism:coverDate,prism:doi,dc:creator,authors\n</code></pre>"},{"location":"scopus-abstract-retrieval-api/#response-body","title":"Response Body","text":"<p>Example of a response body from the Scopus Abstract Retrieval API on an institutional network.</p> <pre><code>\"abstracts-retrieval-response\": {\n    \"coredata\": {\n        \"eid\": \"2-s2.0-85197125619\",\n        \"citedby-count\": \"0\",\n        \"prism:volume\": \"14\",\n        \"dc:description\": \"The advancement of technology has significantly transformed the livestock [...]\",\n        \"prism:coverDate\": \"2024-06-01\",\n        \"dc:title\": \"Digital and Precision Technologies in Dairy Cattle Farming: A Bibliometric Analysis\",\n        \"dc:creator\": {\n            \"author\": [\n                {\n                    \"ce:given-name\": \"Franck Morais\",\n                    \"preferred-name\": {\n                        \"ce:given-name\": \"Franck Morais\",\n                        \"ce:initials\": \"F.M.\",\n                        \"ce:surname\": \"de Oliveira\",\n                        \"ce:indexed-name\": \"de Oliveira F.M.\"\n                    },\n                    \"@seq\": \"1\",\n                    \"ce:initials\": \"F.M.\",\n                    \"@_fa\": \"true\",\n                    \"affiliation\": {\n                        \"@id\": \"60017841\",\n                        \"@href\": \"https://api.elsevier.com/content/affiliation/affiliation_id/60017841\"\n                    },\n                    \"ce:surname\": \"de Oliveira\",\n                    \"@auid\": \"57275191700\",\n                    \"author-url\": \"https://api.elsevier.com/content/author/author_id/57275191700\",\n                    \"ce:indexed-name\": \"de Oliveira F.M.\"\n                }\n            ]\n        },\n        \"prism:doi\": \"10.3390/ani14121832\",\n        \"publishercopyright\": \"\u00a9 2024 by the authors.\",\n        \"prism:publicationName\": \"Animals\",\n        \"dc:identifier\": \"SCOPUS_ID:85197125619\"\n    },\n    \"authors\": {\n        \"author\": [\n            {\n                \"ce:given-name\": \"Franck Morais\",\n                \"preferred-name\": {\n                    \"ce:given-name\": \"Franck Morais\",\n                    \"ce:initials\": \"F.M.\",\n                    \"ce:surname\": \"de Oliveira\",\n                    \"ce:indexed-name\": \"de Oliveira F.M.\"\n                },\n                \"@seq\": \"1\",\n                \"ce:initials\": \"F.M.\",\n                \"@_fa\": \"true\",\n                \"affiliation\": {\n                    \"@id\": \"60017841\",\n                    \"@href\": \"https://api.elsevier.com/content/affiliation/affiliation_id/60017841\"\n                },\n                \"ce:surname\": \"de Oliveira\",\n                \"@auid\": \"57275191700\",\n                \"author-url\": \"https://api.elsevier.com/content/author/author_id/57275191700\",\n                \"ce:indexed-name\": \"de Oliveira F.M.\"\n            }\n        ]\n    }\n}\n</code></pre> Field Description <code>abstracts-retrieval-response</code> Lists article's rich metadata <code>coredata</code> Lists the article's core metadata with the specified fields <code>authors</code> Lists all authors of the article <code>author</code> Lists the data of all authors of the article <p>Example of a response body from the Scopus Abstract Retrieval API on an off-campus network.</p> <pre><code>\"abstracts-retrieval-response\": {\n    \"coredata\": {\n        \"eid\": \"2-s2.0-85197125619\",\n        \"citedby-count\": \"0\",\n        \"prism:volume\": \"14\",\n        \"prism:coverDate\": \"2024-06-01\",\n        \"dc:title\": \"Digital and Precision Technologies in Dairy Cattle Farming: A Bibliometric Analysis\",\n        \"dc:creator\": {\n            \"author\": [\n                {\n                    \"ce:given-name\": \"Franck Morais\",\n                    \"preferred-name\": {\n                        \"ce:given-name\": \"Franck Morais\",\n                        \"ce:initials\": \"F.M.\",\n                        \"ce:surname\": \"de Oliveira\",\n                        \"ce:indexed-name\": \"de Oliveira F.M.\"\n                    },\n                    \"@seq\": \"1\",\n                    \"ce:initials\": \"F.M.\",\n                    \"@_fa\": \"true\",\n                    \"affiliation\": {\n                        \"@id\": \"60017841\",\n                        \"@href\": \"https://api.elsevier.com/content/affiliation/affiliation_id/60017841\"\n                    },\n                    \"ce:surname\": \"de Oliveira\",\n                    \"@auid\": \"57275191700\",\n                    \"author-url\": \"https://api.elsevier.com/content/author/author_id/57275191700\",\n                    \"ce:indexed-name\": \"de Oliveira F.M.\"\n                }\n            ]\n        },\n        \"prism:doi\": \"10.3390/ani14121832\",\n        \"publishercopyright\": \"\u00a9 2024 by the authors.\",\n        \"prism:publicationName\": \"Animals\",\n        \"dc:identifier\": \"SCOPUS_ID:85197125619\"\n    }\n}\n</code></pre> Field Description <code>abstracts-retrieval-response</code> Lists article's rich metadata <code>coredata</code> Lists the article's core metadata with the specified fields <code>author</code> Lists the data of the first author of the article"},{"location":"scopus-search-api/","title":"Scopus Search API","text":"<p>We will use the Scopus Search API, provided by Elsevier, to search for articles using the <code>Keywords</code> and obtain their Scopus IDs. It is a search interface associated with the Scopus cluster containing Scopus abstracts.</p> <p>Info</p> <p>A Cluster is a group of servers/computers that act like a single system.</p>"},{"location":"scopus-search-api/#api-resource-url","title":"API Resource URL","text":"<p>We need to request the below URL and pass some parameters to search.</p> <pre><code>https://api.elsevier.com/content/search/scopus\n</code></pre>"},{"location":"scopus-search-api/#query","title":"Query","text":"<p>Since our search is based on <code>Keywords</code>, we are using a query parameter with Scopus Search Tip to specify our search method, which is <code>TITLE-ABS-KEY</code>, a combined field that will search for <code>Keywords</code> in the abstracts, keywords, and titles of the articles.</p> <pre><code>query=TITLE-ABS-KEY(keyword1 AND keyword2 AND ...)\n</code></pre> <p> Example with Python and Machine Learning as <code>Keywords</code>:</p> <pre><code>query=TITLE-ABS-KEY(Python+AND+Machine+Learning)\n</code></pre>"},{"location":"scopus-search-api/#fields","title":"Fields","text":"<p>By specifying the Scopus Fields, we can filter the response and get only the Scopus IDs of the articles.</p> <pre><code>field=field1,field2,field3,...\n</code></pre> <p> Example with the field used:</p> <pre><code>field=dc:identifier\n</code></pre>"},{"location":"scopus-search-api/#date-range","title":"Date Range","text":"<p>The date range of interest for published articles.</p> <pre><code>date=year1-year2\n</code></pre> <p> Example with date range used, is automatically set to the last three years:</p> <pre><code>date=2021-2024\n</code></pre>"},{"location":"scopus-search-api/#request-headers","title":"Request Headers","text":"<p>The headers included in the request. One of them specifies your <code>API Key</code>.</p> <pre><code>\"Accept-Language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7\",\n\"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\",\n\"Accept-Encoding\": \"gzip, deflate, br\",\n\"Referer\": \"https://www.scopus.com/\",\n\"Origin\": \"https://www.scopus.com\",\n\"Content-Type\": \"application/json\",\n\"Accept\": \"application/json\",\n\"User-Agent\": \"Mozilla/5.0\",\n\"Connection\": \"keep-alive\",\n\"X-ELS-APIKey\": \"Your API Key\"\n</code></pre>"},{"location":"scopus-search-api/#final-url","title":"Final URL","text":"<p>This is an example of a complete URL with all the parameters we requested.</p> <pre><code>https://api.elsevier.com/content/search/scopus?query=TITLE-ABS-KEY(Python+AND+Machine+Learning)&amp;field=dc:identifier&amp;date=2021-2024&amp;suppressNavLinks=true\n</code></pre> <p>The parameter <code>suppressNavLinks</code> is used to suppress the inclusion of top-level navigation links in the response payload.</p>"},{"location":"scopus-search-api/#response-body","title":"Response Body","text":"<p>Example of a response body from the Scopus Search API.</p> <pre><code>{\n  \"search-results\": {\n    \"opensearch:totalResults\": \"1\",\n    \"opensearch:startIndex\": \"0\",\n    \"opensearch:itemsPerPage\": \"1\",\n    \"opensearch:Query\": {\n      \"@role\": \"request\",\n      \"@searchTerms\": \"TITLE-ABS-KEY(Images, Machine Learning, Artificial Intelligence, Computer Vision)\",\n      \"@startPage\": \"0\"\n    },\n    \"entry\": [\n      {\n        \"@_fa\": \"true\",\n        \"prism:url\": \"https://api.elsevier.com/content/abstract/scopus_id/85137995729\",\n        \"dc:identifier\": \"SCOPUS_ID:85137995729\"\n      }\n    ]\n  }\n}\n</code></pre> Field Description <code>search-results</code> Informs some metadata of the search operation and the articles found <code>opensearch:totalResults</code> Total number of articles found <code>opensearch:startIndex</code> Index of the pagination from which we start to retrieve a group of articles <code>opensearch:itemsPerPage</code> Number of articles divided into each page, when there are many results <code>opensearch:Query</code> Some metadata about the submitted boolean search queries <code>entry</code> Lists of articles with the fields specified in the search"},{"location":"technologies/","title":"Technologies","text":"<p>Language</p> <ul> <li>Python <code>v3.11</code></li> </ul> <p>Development Environment Tools</p> <ul> <li>Visual Studio Code <code>v1.86.1</code></li> <li>Makefile GNU Make <code>v4.2.1</code></li> <li>REST Client <code>v0.25.1</code> - VsCode Extension</li> </ul> <p>Docker</p> <ul> <li>Docker <code>v25.0.3</code></li> </ul> <p>Framework</p> <ul> <li>FastAPI <code>v0.109.2</code></li> </ul> <p>Dependency Management</p> <ul> <li>Poetry <code>v1.7.1</code></li> </ul> <p>Application Dependencies</p> <ul> <li>Pandas <code>v2.2.0</code></li> <li>Pydantic <code>v2.6.1</code></li> <li>Requests <code>v2.31.0</code></li> <li>TheFuzz <code>v0.22.1</code></li> <li>Python-Levenshtein <code>v0.25.0</code></li> <li>CacheControl <code>v0.14.0</code></li> <li>QRCode <code>v7.4.2</code></li> <li>tqdm <code>v4.66.5</code></li> <li>Toml <code>v0.10.2</code></li> <li>Python-Dotenv <code>v1.0.1</code></li> </ul> <p>Linting and Formating Dependencies</p> <ul> <li>Isort <code>v5.13.2</code></li> <li>Flake8 <code>v3.8.3</code></li> <li>Pylint <code>v3.0.3</code></li> <li>MyPy <code>v1.8.0</code></li> <li>Radon <code>v6.0.1</code></li> </ul> <p>Vulnerability and Security Issues Dependencies</p> <ul> <li>Bandit <code>v1.7.7</code></li> <li>Pip-Audit <code>v2.7.0</code></li> </ul> <p>Test Dependencies</p> <ul> <li>Pytest <code>v8.0.0</code></li> <li>Pytest-Mock <code>v3.12.0</code></li> <li>Pytest-Asyncio <code>v0.23.5</code></li> <li>Coverage <code>v7.4.3</code></li> </ul> <p>Documentation Dependencies</p> <ul> <li>MkDocs <code>v1.5.3</code></li> <li>MkDocs-Material <code>v9.5.9</code></li> <li>MkDocs static i18n plugin <code>v1.2.3</code></li> <li>MKDocs markdown extra data plugin <code>v0.2.5</code></li> </ul>"},{"location":"testing/","title":"Tests","text":""},{"location":"testing/#automated-tests","title":"Automated Tests","text":"<p> Unitary: tests the individual components (each unit) in isolation.</p> <p> Integration: tests the combined entity of different units, modules or components.</p> <p> Coverage: test coverage of 99%.</p> <pre><code>.\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 helpers/\n\u2502   \u251c\u2500\u2500 integration/\n\u2502   |   \u251c\u2500\u2500 adapters/\n|   |   |   \u251c\u2500\u2500 gateway/\n|   |   |   \u2514\u2500\u2500 helpers/\n\u2502   |   \u251c\u2500\u2500 core/\n|   |   |   \u2514\u2500\u2500 usecases/\n\u2502   |   \u2514\u2500\u2500 framework/\n|   |       \u251c\u2500\u2500 dependencies/\n|   |       \u251c\u2500\u2500 exceptions/\n|   |       \u251c\u2500\u2500 fastapi/\n|   |       \u2514\u2500\u2500 middleware/\n\u2502   \u251c\u2500\u2500 mocks/\n\u2502   \u2514\u2500\u2500 unitary/\n\u2502       \u251c\u2500\u2500 adapters/\n|       |   \u251c\u2500\u2500 gateway/\n|       |   \u251c\u2500\u2500 helpers/\n|       |   \u2514\u2500\u2500 presenters/\n\u2502       \u251c\u2500\u2500 core/\n|       |   \u251c\u2500\u2500 data/\n|       |   \u251c\u2500\u2500 domain/\n|       |   \u2514\u2500\u2500 usecases/\n\u2502       \u2514\u2500\u2500 framework/\n|           \u251c\u2500\u2500 dependencies/\n|           \u2514\u2500\u2500 exceptions/\n</code></pre> <p>You can configure and use the VsCode to test all the scripts with Pytest and Coverage:</p> launch.json<pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Python Debugger: FastAPI\",\n      \"type\": \"debugpy\",\n      \"request\": \"launch\",\n      \"module\": \"app.framework.fastapi.main\",\n      \"pythonArgs\": [\"-Xfrozen_modules=off\"],\n      \"jinja\": true,\n      \"console\": \"integratedTerminal\",\n    }\n  ]\n}\n</code></pre> Locally with PoetryLocally with PipDocker <pre><code># Setup Venv\nmake setup\n\n# Activate Venv\nsource .venv/bin/activate\n\n# Install test dependencies with Poetry\n(.venv) poetry install --only test\n\n# Run Pytest in Venv\n(.venv) make test\n\n# Run Coverage in Venv\n(.venv) make coverage\n</code></pre> <pre><code># Setup Venv\nmake setup\n\n# Activate Venv\nsource .venv/bin/activate\n\n# Install test dependencies with Pip\n(.venv) pip3 install -r requirements/requirements-test.txt\n\n# Run Pytest in Venv\n(.venv) make test\n\n# Run Coverage in Venv\n(.venv) make coverage\n</code></pre> <pre><code># Run the App in Docker Container\nmake docker\n\n# Run Pytest in Docker\nmake test-docker\n\n# Run Coverage in Docker\nmake coverage-docker\n</code></pre> <p></p>"},{"location":"testing/#scopus-apis-request-tests","title":"Scopus APIs Request Tests","text":"<p>Install the REST Client VsCode Extension to configure and send requests to Scopus APIs for testing.</p> <p></p> <p>1. Access the <code>client.http</code> file. 2. Insert your <code>API Key</code> in <code>@apikey =</code>. 3. Click on <code>Send Request</code>.</p> <p></p>"},{"location":"pt/","title":"Scopus Survey API","text":"API Web para Levantamento Bibliogr\u00e1fico de Artigos da Scopus <p>Instituto Federal de Mato Grosso do Sul - IFMS - Campus Tr\u00eas Lagoas  Tecnologia em An\u00e1lise de Desenvolvimento de Sistemas - TADS  Brasil - MS - Tr\u00eas Lagoas </p> <p>C\u00f3digo Fonte: https://github.com/mauprogramador/scopus-survey-api</p>"},{"location":"pt/#visao-geral","title":"Vis\u00e3o geral","text":"<p>Esta Web API foi desenvolvida para facilitar a busca de artigos para pesquisa e desenvolvimento de referenciais te\u00f3ricos. Ela usar\u00e1 ambos a Scopus Search API e a Scopus Abstract Retrieval API, mantidas pela empresa Elsevier, para consultar o cluster da Scopus, que \u00e9 o maior banco de dados de resumos e cita\u00e7\u00f5es de literatura e fontes de pesquisa de qualidade na web.</p> <p>Para realizar a busca, voc\u00ea precisar\u00e1 ter o Python3 ou Docker instalado para executar a aplica\u00e7\u00e3o, voc\u00ea tamb\u00e9m precisar\u00e1 gerar uma <code>Chave da API</code> e selecionar no m\u00e1ximo quatro <code>Palavras-chave</code> com base no tema da sua pesquisa. Inicie a aplica\u00e7\u00e3o, v\u00e1 para a p\u00e1gina web, submeta sua <code>Chave da API</code> e suas <code>Palavras-chave</code>, e, caso algum artigo for encontrado, um arquivo CSV contendo todas as informa\u00e7\u00f5es dos artigos ser\u00e1 retornado.</p> <p>Note</p> <p>Este projeto est\u00e1 licenciado sob os termos da licen\u00e7a MIT.</p>"},{"location":"pt/api-limit-and-fields-and-filter/","title":"Limite das APIs &amp; Campos &amp; Filtragem","text":""},{"location":"pt/api-limit-and-fields-and-filter/#limite-das-apis","title":"Limite das APIs","text":"<p>H\u00e1 um limite para quantas solicita\u00e7\u00f5es voc\u00ea pode fazer para APIs da Scopus usando sua <code>Chave da API</code>. Ap\u00f3s cada solicita\u00e7\u00e3o, a API retornar\u00e1 algumas informa\u00e7\u00f5es sobre a disponibilidade de sua <code>Chave da API</code> nos cabe\u00e7alhos da resposta. Esse limite de cota \u00e9 redefinido a cada sete dias.</p> <pre><code>\"X-RateLimit-Limit\": \"Mostra o limite de cota de solicita\u00e7\u00f5es de API\",\n\"X-RateLimit-Remaining\": \"Mostra a cota restante de solicita\u00e7\u00e3o da API\",\n\"X-RateLimit-Reset\": \"Data/hora em segundos *Epoch* de quando a cota da API ser\u00e1 redefinida\"\n</code></pre> <p>Info</p> <p>Epoch \u00e9 o n\u00famero de segundos decorridos desde 1\u00ba de janeiro de 1970, tamb\u00e9m conhecido como hor\u00e1rio Unix.</p>"},{"location":"pt/api-limit-and-fields-and-filter/#cota-excedida","title":"Cota Excedida","text":"<p>Se a cota de solicita\u00e7\u00f5es ou a taxa throttling da API for excedida, voc\u00ea receber\u00e1 um erro de status HTTP 429: Too Many Requests.</p> <pre><code>\"X-ELS-Status\": \"QUOTA_EXCEEDED - Quota Exceeded\"\n</code></pre> <p>Note</p> <p>Saiba mais sobre a cota de quantos dados uma <code>Chave da API</code> pode recuperar.</p>"},{"location":"pt/api-limit-and-fields-and-filter/#mapeamento-de-campos","title":"Mapeamento de Campos","text":"<p>Levando em conta que o objetivo desta aplica\u00e7\u00e3o \u00e9 realizar um levantamento de referenciais te\u00f3ricos para pesquisa e embasamento de futuros trabalhos acad\u00eamicos, selecionamos um conjunto de informa\u00e7\u00f5es espec\u00edficas dos metadados dos artigos.</p> Campo Coluna Descri\u00e7\u00e3o <code>link ref=scopus</code> Article Preview Page URL URL da p\u00e1gina de visualiza\u00e7\u00e3o do artigo do Scopus <code>dc:identifier</code> Scopus ID ID Scopus do Artigo <code>authors</code> or <code>dc:creator</code> Authors Lista completa de autores ou apenas o primeiro autor <code>dc:title</code> Title T\u00edtulo do artigo <code>prism:publicationName</code> Publication Name T\u00edtulo da fonte <code>dc:description</code> Abstract Resumo completo do artigo <code>prism:coverDate</code> Date Data de publica\u00e7\u00e3o <code>eid</code> Electronic ID ID Electr\u00f4nico do Artigo <code>prism:doi</code> DOI Identificador de Objeto do Documento <code>prism:volume</code> Volume Identificador para uma publica\u00e7\u00e3o em s\u00e9rie <code>citedby-count</code> Citations Contagem de cita\u00e7\u00f5es <p>Note</p> <p>Veja um exemplo de uma p\u00e1gina de visualiza\u00e7\u00e3o de um artigo da Scopus.</p>"},{"location":"pt/api-limit-and-fields-and-filter/#filtrando-resultados","title":"Filtrando Resultados","text":"<p>Para fornecer maior consist\u00eancia, todos os dados passam por tr\u00eas etapas de filtragem:</p> <p>1. Primeiramente, todas as repeti\u00e7\u00f5es exatas ser\u00e3o removidas.</p> <p>2. Em Segundo lugar, todos os resultados com exatos mesmo t\u00edtulo e mesmos autores ser\u00e3o removidos.</p> <p>3. Finalmente, todos os resultados com t\u00edtulos similares e provenientes dos mesmos autores ser\u00e3o removidos.</p> <p>Para realizar o terceiro passo, n\u00f3s iremos selecionar dois ou mais artigos que tenham exatamente os mesmos autores. Depois disso, usaremos a biblioteca TheFuzz, que usa a Dist\u00e2ncia de Levenshtein, para calcular a similaridade entre os t\u00edtulos dos artigos desses autores repetidos e, por fim, removeremos os artigos cujos t\u00edtulos sejam pelo menos <code>80%</code> semelhantes.</p> <p>Artigos que n\u00e3o tenham autores repetidos ou t\u00edtulos semelhantes ser\u00e3o desconsiderados. Uma mensagem de log ser\u00e1 exibida indicando a porcentagem de perda total dos artigos.</p>"},{"location":"pt/contact/","title":"Contato","text":""},{"location":"pt/contact/#ola-eu-sou-o-mauricio","title":"Ol\u00e1!  Eu sou o Maur\u00edcio","text":"@mauprogramador <p>Sou o brasileiro criador e dono do reposit\u00f3rio ScopusSurveyAPI. Um desenvolvedor Backend, com Python e Javascript, e tamb\u00e9m um desenvolvedor Web.</p> <p>Voc\u00ea pode se conectar comigo (Maur\u00edcio / @mauprogramador), o autor. Se voc\u00ea gostou desta Web API, por favor d\u00ea uma olhada no meu perfil do GitHub, entre em contato e siga-me.</p> <p> </p>"},{"location":"pt/environment/","title":"Ambiente","text":""},{"location":"pt/environment/#configuracao","title":"Configura\u00e7\u00e3o","text":"Par\u00e2metro Descri\u00e7\u00e3o Default <code>debug</code> Habilita a sa\u00edda dos logs de depura\u00e7\u00e3o <code>false</code> <code>logging_file</code> Habilita o salvamento dos registros dos logs em arquivo. Isso criar\u00e1 uma pasta <code>.logs</code> <code>false</code> <code>host</code> Vincula o soquete a este endere\u00e7o de host.Defina <code>0.0.0.0</code> para tornar a aplica\u00e7\u00e3o dispon\u00edvel em sua rede local <code>127.0.0.1</code> <code>port</code> Vincula a um soquete e executa a aplica\u00e7\u00e3o com esta porta <code>8000</code> <code>reload</code> Habilita o recarregamento autom\u00e1tico da aplica\u00e7\u00e3o quando os arquivos s\u00e3o modificados <code>false</code> <p>Voc\u00ea pode configurar alguns par\u00e2metros para a aplica\u00e7\u00e3o no arquivo <code>pyproject.toml</code>, tais como:</p> pyproject.toml<pre><code>[application]\ndebug = false\nlogging_file = false\nhost = \"127.0.0.1\"\nport = 8000\nreload = false\n</code></pre> <p>Voc\u00ea tamb\u00e9m pode definir vari\u00e1veis de ambiente para substituir as configura\u00e7\u00f5es padr\u00e3o ao executar a aplica\u00e7\u00e3o localmente ou em um cont\u00eainer Docker.</p> .env<pre><code>DEBUG=false\n\nLOGGING_FILE=false\n\nHOST=127.0.0.1\n\nPORT=8000\n\nRELOAD=false\n</code></pre>"},{"location":"pt/environment/#ambiente-python","title":"Ambiente Python","text":"<p>\u00c9 necess\u00e1rio preparar um ambiente com as depend\u00eancias corretas para trabalhar corretamente com cada \u00e1rea da aplica\u00e7\u00e3o. Para fazer isso, voc\u00ea precisa instalar o Python3 <code>v3.11</code> com Venv e Pip.</p> <p>Info</p> <p>Este projeto usa o Poetry para empacotar e gerenciar depend\u00eancias do Python.</p> <p>Tip</p> <p>Voc\u00ea tamb\u00e9m pode usar Docker para executar a aplica\u00e7\u00e3o.</p>"},{"location":"pt/environment/#configurar-o-ambiente-virtual","title":"Configurar o Ambiente Virtual","text":"<pre><code># Configure o Venv\nmake setup\n\n# Ative o Venv\nsource .venv/bin/activate\n</code></pre>"},{"location":"pt/environment/#dependencias","title":"Depend\u00eancias","text":""},{"location":"pt/environment/#ambiente-completo","title":"Ambiente Completo","text":"<p> Instale todas as depend\u00eancias.</p> com Poetrycom Pip <pre><code>(.venv) poetry install\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-all.txt\n</code></pre>"},{"location":"pt/environment/#ambiente-da-aplicacao","title":"Ambiente da Aplica\u00e7\u00e3o","text":"<p> Instale apenas as depend\u00eancias da aplica\u00e7\u00e3o.</p> com Poetrycom Pip <pre><code>(.venv) make install\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements.txt\n</code></pre> <p>  Execute a aplica\u00e7\u00e3o</p> LocalmenteDocker <pre><code># Execute a aplica\u00e7\u00e3o Localmente\n(.venv) make run\n</code></pre> <pre><code># Execute a aplica\u00e7\u00e3o em um Cont\u00eainer Docker\nmake docker\n</code></pre>"},{"location":"pt/environment/#ambiente-de-desenvolvimento","title":"Ambiente de Desenvolvimento","text":"<p> Instale apenas as depend\u00eancias de desenvolvimento.</p> com Poetrycom Pip <pre><code>(.venv) poetry install --only dev\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-dev.txt\n</code></pre> <p>  Execute a Formata\u00e7\u00e3o, o Linting e a Auditoria de Vulnerabilidades.</p> <pre><code># execute a Formata\u00e7\u00e3o\n(.venv) make format\n\n# execute o Linting\n(.venv) make lint\n\n# execute o Linting nos Testes\n(.venv) make lint-tests\n\n# execute a Auditoria de Vulnerabilidades\n(.venv) make audit\n</code></pre>"},{"location":"pt/environment/#ambiente-dos-testes","title":"Ambiente dos Testes","text":"<p> Instale apenas as depend\u00eancias dos testes.</p> com Poetrycom Pip <pre><code>(.venv) poetry install --only test\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-test.txt\n</code></pre> <p>  Execute os testes e verifique a cobertura dos testes</p> LocalmenteDocker <pre><code># Execute o Pytest no Venv\n(.venv) make test\n\n# Execute o Coverage no Venv\n(.venv) make coverage\n</code></pre> <pre><code># Execute o Pytest no Docker\nmake test-docker\n\n# Execute o Coverage no Docker\nmake coverage-docker\n</code></pre>"},{"location":"pt/environment/#ambiente-da-documentacao","title":"Ambiente da Documenta\u00e7\u00e3o","text":"<p> Instale apenas as depend\u00eancias da documenta\u00e7\u00e3o.</p> com Poetrycom Pip <pre><code>(.venv) poetry install --only docs\n</code></pre> <pre><code>(.venv) pip3 install -r requirements/requirements-docs.txt\n</code></pre> <p>  Execute a documenta\u00e7\u00e3o do Mkdocs.</p> <p>Execute Localmente e acesse a p\u00e1gina web em http://127.0.0.1:8000.</p> <pre><code># Servir MkDocs\n(.venv) make docs\n</code></pre>"},{"location":"pt/environment/#arquivos-de-requisitos","title":"Arquivos de Requisitos","text":"<p>Voc\u00ea pode gerar v\u00e1rios arquivos de requisitos para diferentes finalidades.</p> <pre><code># Requisitos apenas para as depend\u00eancias da Aplica\u00e7\u00e3o\n(.venv) make req\n\n# Requisitos para a Aplica\u00e7\u00e3o com as depend\u00eancias de Desenvolvimento\n(.venv) make req-dev\n\n# Requisitos para as depend\u00eancias da Documenta\u00e7\u00e3o\n(.venv) make req-docs\n\n# Requisitos para as depend\u00eancias dos Testes\n(.venv) make req-test\n\n# Requisitos para Todas as depend\u00eancias\n(.venv) make req-all\n</code></pre>"},{"location":"pt/getting-started/","title":"Primeiros Passos","text":""},{"location":"pt/getting-started/#clone","title":"Clone","text":"<p>Primeiro voc\u00ea precisar\u00e1 clonar o c\u00f3digo-fonte do projeto do reposit\u00f3rio no GitHub:  https://github.com/mauprogramador/scopus-survey-api </p> <p>No terminal Bash usando o Git:</p> <pre><code>git clone https://github.com/mauprogramador/scopus-survey-api.git\n</code></pre> <p> No VsCode usando a Extens\u00e3o do Git:</p> <ul> <li>Abra a Paleta de Comandos e pressione <code>Ctrl</code> + <code>Shift</code> + <code>P</code> ou <code>F1</code>.</li> <li>Selecione o comando <code>Git: Clone</code> e clique nele.</li> <li>Cole a URL do reposit\u00f3rio:</li> </ul> <pre><code>https://github.com/mauprogramador/scopus-survey-api.git\n</code></pre> <ul> <li>Pressione <code>Enter</code> ou clique em <code>Clone from URL</code> e selecione um diret\u00f3rio.</li> </ul> <p>Tip</p> <p>D\u00ea uma olhada na Documenta\u00e7\u00e3o do Controle de Vers\u00e3o do Git no VsCode.</p>"},{"location":"pt/getting-started/#execute","title":"Execute","text":"PoetryPipDocker <pre><code># Configure o Venv\nmake setup\n\n# Ative o Venv\nsource .venv/bin/activate\n\n# Instale as depend\u00eancias\n(.venv) make install\n\n# Execute o App localmente\n(.venv) make run\n</code></pre> <pre><code># Configure o Venv\nmake setup\n\n# Ative o Venv\nsource .venv/bin/activate\n\n# Instale as depend\u00eancias\n(.venv) pip3 install -r requirements/requirements.txt\n\n# Execute o App localmente\n(.venv) make run\n</code></pre> <pre><code># Execute o App em um Cont\u00eainer Docker\nmake docker\n</code></pre>"},{"location":"pt/getting-started/#aplicacao-web","title":"Aplica\u00e7\u00e3o Web","text":"<p>Depois de iniciar a aplica\u00e7\u00e3o, voc\u00ea pode acessar a P\u00e1gina Web da Aplica\u00e7\u00e3o em:  http://127.0.0.1:8000/scopus-survey/api</p> <p></p> <p>Tip</p> <p>Selecione o idioma de sua prefer\u00eancia clicando no bot\u00e3o ao lado da bandeira no canto superior direito, Atualmente s\u00e3o suportados Ingl\u00eas (<code>en-us</code>) e Portugu\u00eas (<code>pt-br</code>).</p> <p>Na p\u00e1gina web, clique nos campos e insira seus dados, certificando-se de que est\u00e3o corretos:</p> <ul> <li>Insira sua <code>Chave da API</code> e <code>Palavras-chave</code> nos respectivos campos.</li> <li>Insira uma <code>Palavra-chave</code> para cada campo..</li> <li>\u00c9 obrigat\u00f3rio o preenchimento do campo da <code>Chave da API</code> e de pelo menos dois campos das <code>Palavras-chave</code>.</li> <li>Clique no bot\u00e3o Procurar Artigos e aguarde os resultados da busca.</li> </ul> <p></p> <p>Todos os campos da p\u00e1gina web est\u00e3o configurados para verificar se as informa\u00e7\u00f5es de cada respectivo campo est\u00e3o corretas, ent\u00e3o voc\u00ea deve estar atento \u00e0s regras e condi\u00e7\u00f5es relativas \u00e0 <code>Chave da API</code> e \u00e0s <code>Palavras-chave</code> fornecidas na se\u00e7\u00e3o de requisitos.</p> <p>Assim que voc\u00ea come\u00e7ar a digitar em um campo, ele lhe dar\u00e1 um feedback automaticamente, ent\u00e3o fique atento:</p> <ul> <li>Lembre-se que \u00e9 obrigat\u00f3rio o preenchimento do campo da <code>Chave da API</code> e de pelo menos dois campos das <code>Palavras-chave</code>.</li> <li>A cor vermelha circular\u00e1 o campo e uma mensagem ser\u00e1 mostrada caso os dados estejam incorretos.</li> <li>A cor verde circular\u00e1 o campo se os dados estiverem corretos.</li> </ul> <p></p> <p>Se algum artigo for encontrado com sucesso, uma mensagem retornar\u00e1 informando sobre o sucesso e um arquivo CSV contendo todas as informa\u00e7\u00f5es da busca ser\u00e1 baixado automaticamente.</p> <p></p> <p>Se nenhum artigo for encontrado, uma mensagem retornar\u00e1 informando o que houve de errado. Voc\u00ea deve primeiro ler e analisar a mensagem e tentar entender o que causou o erro antes de tentar novamente.</p> <p></p> <p>Voc\u00ea tamb\u00e9m pode verificar a resposta da requisi\u00e7\u00e3o no inspecionar DevTools do navegador.</p> <p></p>"},{"location":"pt/getting-started/#tabela-dos-artigos","title":"Tabela dos Artigos","text":"<p>Ap\u00f3s concluir com sucesso o processamento da busca, al\u00e9m de baixar o arquivo CSV, o bot\u00e3o Mostrar Tabela tamb\u00e9m ser\u00e1 liberado, e ao clicar nele voc\u00ea ser\u00e1 redirecionado para uma nova p\u00e1gina na qual uma tabela exibir\u00e1 uma pr\u00e9via de todos os dados dos artigos encontrados.</p> <p></p> <p>A tabela abaixo exemplifica os resultados de uma busca. Usando Computer Vision, Scopus e Machine Learning como <code>Palavras-chave</code>, um total de 71 artigos foram encontrados. N\u00e3o houve perda por similaridade e levou cerca de 18704.65ms.</p> <p></p> <p>Note</p> <p>Clique aqui para baixar o arquivo CSV do exemplo da busca acima.</p>"},{"location":"pt/getting-started/#swagger-interativo","title":"Swagger interativo","text":"<p>Depois de iniciar a aplica\u00e7\u00e3o, voc\u00ea pode acessar o Swagger UI clicando em http://127.0.0.1:8000.</p> <p></p> <p>Selecione o Endpoint <code>/search-articles</code> e clique no bot\u00e3o Try it out.</p> <ul> <li>Insira sua <code>Chave da API</code> e <code>Palavras-chave</code>.</li> <li>As <code>Palavras-chave</code> devem ser separadas por v\u00edrgula.</li> <li>\u00c9 obrigat\u00f3rio o preenchimento do campo da <code>Chave da API</code> e de pelo menos duas <code>Palavras-chave</code>.</li> <li>O cabe\u00e7alho <code>X-Access-Token</code> ser\u00e1 definido automaticamente, voc\u00ea n\u00e3o deve alter\u00e1-lo.</li> <li>Clique no bot\u00e3o Execute.</li> </ul> <p></p> <p>Se algum artigo for encontrado com sucesso, um arquivo CSV contendo todas as informa\u00e7\u00f5es da busca ser\u00e1 retornado. Voc\u00ea pode clicar no bot\u00e3o Download para baixar o arquivo.</p> <p></p> <p>Se nenhum artigo for encontrado, uma mensagem ser\u00e1 retornada informando o que houve de errado. Voc\u00ea deve primeiro ler e analisar a mensagem e tentar entender o que causou o erro antes de tentar novamente.</p> <p></p>"},{"location":"pt/glossary/","title":"Gloss\u00e1rio","text":"<code>Achatamento (Flattening)</code> <p>Processo de transforma\u00e7\u00e3o de uma estrutura de dados JSON aninhada em um \u00fanico n\u00edvel de pares chave-valor.</p> <code>API</code> <p>Application Program Interface Uma maneira de dois ou mais programas ou componentes de computador se comunicarem entre si.</p> <code>Bash</code> <p>Bourne Again SHell Programa Shell e linguagem de comando desenvolvida para o Projeto GNU.</p> <code>Cache</code> <p>Mecanismo que armazena temporariamente dados para que solicita\u00e7\u00f5es futuras para esses dados possam ser atendidas mais rapidamente.</p> <code>Cluster</code> <p>Um grupo de servidores/computadores que trabalham juntos e atuam como um \u00fanico sistema.</p> <code>C\u00f3digo Fonte</code> <p>Refere-se ao c\u00f3digo/algoritmo escrito em forma leg\u00edvel por humanos em uma linguagem de programa\u00e7\u00e3o para controlar o comportamento de um computador.</p> <code>Commit</code> <p>Opera\u00e7\u00e3o que registra e envia as mudan\u00e7as mais recentes do c\u00f3digo fonte para o reposit\u00f3rio.</p> <code>CORS</code> <p>Cross-Origin Resource Sharing Mecanismo para permite com seguran\u00e7a uma p\u00e1gina da web acessar recursos restritos de um servidor em um dom\u00ednio diferente do dom\u00ednio que serviu na p\u00e1gina da web.</p> <code>CSV</code> <p>Comma-Separated Values Formato de arquivo de texto que armazena dados tabulares separados por v\u00edrgula em texto simples.</p> <code>CSS</code> <p>Cascading Style Sheets Linguagem de folha de estilo usada para especificar a apresenta\u00e7\u00e3o e estilo de um documento escrito em uma linguagem de marca\u00e7\u00e3o como HTML.</p> <code>Deploy</code> <p>Processo de disponibilizar um software/aplicativo para uso.</p> <code>DevTools</code> <p>Web Developer Tools Um conjunto de ferramentas que permitem aos desenvolvedores testar, modificar e depurar seus sites.</p> <code>Desligamento Gracioso</code> <p>Um processo controlado e ordenado para realizar um desligamento seguro e liberar recursos quando a aplica\u00e7\u00e3o \u00e9 repentinamente interrompida ou recebe um sinal de desligamento/encerramento.</p> <code>DTO</code> <p>Data Transfer Object Um objeto que transporta dados entre processos ou camadas de uma aplica\u00e7\u00e3o e n\u00e3o cont\u00e9m l\u00f3gica de neg\u00f3cios al\u00e9m de armazenar, recuperar, serializar e desserializar dados.</p> <code>Endpoint</code> <p>Refere-se a um caminho (URL) que atua como um ponto de acesso aos recursos da aplica\u00e7\u00e3o para executar opera\u00e7\u00f5es ou obter informa\u00e7\u00f5es.</p> <code>Epoch</code> <p>\u00c9 o n\u00famero de segundos que se passaram desde 1\u00ba de janeiro de 1970, tamb\u00e9m conhecido como tempo Unix.</p> <code>Exce\u00e7\u00e3o (Exception)</code> <p>Uma condi\u00e7\u00e3o an\u00f4mala ou excepcional inesperada encontrada durante a execu\u00e7\u00e3o do programa que interrompe o fluxo normal.</p> <code>Git</code> <p>Um sistema de controle de vers\u00e3o que rastreia e gerencia vers\u00f5es (altera\u00e7\u00f5es de registros) de arquivos.</p> <code>GitHub</code> <p>Uma plataforma que permite aos desenvolvedores criar, armazenar, gerenciar e compartilhar seu c\u00f3digo com o Git.</p> <code>HTML</code> <p>Hypertext Markup Language Linguaguem padr\u00e3o para marca\u00e7\u00e3o e estrutura\u00e7\u00e3o do conte\u00fado da web.</p> <code>HTTP</code> <p>Hypertext Transfer Protocol Protocolo da camada de aplica\u00e7\u00e3o para transmiss\u00e3o de documentos hiperm\u00eddia na web.</p> <code>ISO (8601 - Date Format)</code> <p>International Organization for Standardization Um padr\u00e3o para representar datas e hor\u00e1rios internacionalmente usando um sistema num\u00e9rico.</p> <code>JSON</code> <p>JavaScript Object Notation Formato de arquivo serializ\u00e1vel para troca de dados que armazena e transmite objetos de dados e matrizes de pares de atributo-valor.</p> <code>Lado do Cliente</code> <p>Refere-se a opera\u00e7\u00f5es executadas pelo cliente em uma rede de computadores, como um navegador da web, que \u00e9 executado no dispositivo local de um usu\u00e1rio e se conecta a um servidor conforme necess\u00e1rio.</p> <code>Lado do Servidor</code> <p>Refere-se a opera\u00e7\u00f5es executadas pelo servidor em uma rede de computadores, como processamento de dados e solicita\u00e7\u00f5es e execu\u00e7\u00e3o da l\u00f3gica de neg\u00f3cios.</p> <code>Lint</code> <p>Ferramenta de an\u00e1lise de c\u00f3digo est\u00e1tico usado para sinalizar erros de programa\u00e7\u00e3o e bugs.</p> <code>Middleware</code> <p>Mecanismo que funciona no ciclo de requisi\u00e7\u00e3o-resposta da aplica\u00e7\u00e3o, interceptando e processando chamadas, e acessando e manipulando cada objeto de solicita\u00e7\u00e3o/resposta.</p> <code>MIT (License)</code> <p>Massachusetts Institute of Technology License Licen\u00e7a de software de c\u00f3digo aberto permissiva.</p> <code>MDN (Web Docs)</code> <p>Mozilla Developer Network Reposit\u00f3rio de documenta\u00e7\u00e3o e recursos de aprendizado em padr\u00f5es da web e guias de desenvolvedores.</p> <code>Pip</code> <p>Sistema de gerenciamento de pacotes usado para instalar e gerenciar pacotes e bibliotecas Python.</p> <code>Poetry</code> <p>Ferramenta para gerenciamento e embalagem de depend\u00eancia em Python.</p> <code>Proxy</code> <p>Servidor de aplica\u00e7\u00e3o intermedi\u00e1rio entre o cliente solicitante e o servidor de fornecimento de um recurso, melhorando a privacidade, a seguran\u00e7a e o desempenho no processo.</p> <code>Rate Limiting</code> <p>Mecanismo que limita o tr\u00e1fego da rede, controlando o n\u00famero de solicita\u00e7\u00f5es que podem ser feitas dentro de um determinado per\u00edodo de tempo.</p> <code>Repository</code> <p>Estrutura de dados que armazena metadados, arquivos e registros de altera\u00e7\u00f5es feitas nesses arquivos.</p> <code>REST</code> <p>Refere-se \u00e0s restri\u00e7\u00f5es de design de arquitetura de software que geram sistemas distribu\u00eddos eficientes, confi\u00e1veis e escal\u00e1veis.</p> <code>Retry</code> <p>Mecanismo que automaticamente tenta novamente as opera\u00e7\u00f5es com falha para se recuperar de falhas inesperadas e continuar funcionando corretamente.</p> <code>Rota</code> <p>Refere-se a um caminho (URL) associado a uma fun\u00e7\u00e3o executada quando a rota \u00e9 correspondida.</p> <code>Serializa\u00e7\u00e3o</code> <p>Processo de convers\u00e3o de dados em um formato com tipos de dados nativos que podem ser armazenados, manipulados ou transmitidos posteriormente usando um modelo serializador.</p> <code>Sess\u00e3o</code> <p>Mecanismo que persiste certos par\u00e2metros e reutiliza a mesma conex\u00e3o em todas as solicita\u00e7\u00f5es.</p> <code>Swagger</code> <p>Conjunto de ferramentas para ajudar no desenvolvimento, design e documenta\u00e7\u00e3o de APIs.</p> <code>Throttling</code> <p>Mecanismo que controla a taxa de fluxo de dados em um servi\u00e7o limitando o n\u00famero de solicita\u00e7\u00f5es da API que um usu\u00e1rio pode fazer em um determinado per\u00edodo.</p> <code>URI</code> <p>Uniform Resource Identifier Uma sequ\u00eancia \u00fanica de caracteres que identifica um recurso abstrato ou f\u00edsico, como recursos em uma p\u00e1gina da web, endere\u00e7o de correio e objetos do mundo real.</p> <code>URL</code> <p>Uniform Resource Locator \u00c9 o refer\u00eancia/caminho/endere\u00e7o para acessar um recurso localizado em uma rede de computadores, como uma p\u00e1gina da web ou um arquivo na internet.</p> <code>Valida\u00e7\u00e3p</code> <p>Processo de verifica\u00e7\u00e3o da precis\u00e3o e qualidade dos dados de origem, usando regras e restri\u00e7\u00f5es l\u00f3gicas para garantir que estejam corretos e \u00fateis antes de us\u00e1-los ou process\u00e1-los posteriormente.</p> <code>Venv</code> <p>Virtual Environment M\u00f3dulo Python para criar ambientes virtuais, um diret\u00f3rio isolado em que um conjunto independente de pacotes/bibliotecas pode ser instalado.</p> <code>Versionamento</code> <p>Processo de atribuir um nome/n\u00famero exclusivo a cada estado/vers\u00e3o de um software.</p> <code>VPN</code> <p>Virtual Private Network Arquitetura de rede para virtualmente estabelecer uma conex\u00e3o de rede privada entre outras redes, criando um t\u00fanel que criptografa seus dados, garantindo prote\u00e7\u00e3o e seguran\u00e7a.</p> <code>VsCode</code> <p>Visual Studio Code Editor de c\u00f3digo fonte com suporte para v\u00e1rias linguagens de programa\u00e7\u00e3o e ambientes de tempo de execu\u00e7\u00e3o, al\u00e9m de recursos de personaliza\u00e7\u00e3o e desenvolvimento.</p> <code>Web Scraping</code> <p>Refere-se ao processo automatizado de pesquisa e extra\u00e7\u00e3o/raspagem de dados espec\u00edficos de uma p\u00e1gina da web para um processamento adicional.</p> <code>Workflows (GitHub)</code> <p>Processo automatizado configur\u00e1vel que executar\u00e1 uma ou mais tarefas quando desencadeado por um evento ou manualmente em seu reposit\u00f3rio.</p>"},{"location":"pt/hooks-actions/","title":"Hooks e Actions","text":"<p>Ao desenvolver uma aplica\u00e7\u00e3o, \u00e9 comum utilizar diferentes tecnologias para assegurar  uma boa condi\u00e7\u00e3o do c\u00f3digo e seu funcionamento. Para isso, podemos utilizar ferramentas de verifica\u00e7\u00e3o e integra\u00e7\u00e3o quando ocorrem certas a\u00e7\u00f5es importantes no versionamento do c\u00f3digo.</p>"},{"location":"pt/hooks-actions/#git-hooks","title":"Git Hooks","text":"<p>Abaixo esta o script do Git Hook do lado do cliente usado nesta aplica\u00e7\u00e3o, \u00e9 chamado de <code>pre-commit</code> porque \u00e9 o primeiro que ser\u00e1 executado automaticamente localmente quando ocorrer um commit, e ir\u00e1 executar determinadas a\u00e7\u00f5es de checagem dependendo dos arquivos que foram alterados e que est\u00e3o sendo comitados.</p> <ul> <li>Executa o Lint quando arquivos da pasta <code>app</code> forem comitados.</li> <li>Executa o Lint quando arquivos da pasta <code>tests</code> forem comitados.</li> <li>Executa a Auditoria de Vulnerabilidade quando arquivos da pasta <code>requirements</code> forem comitados, o que significa que novas bibliotecas, pacotes ou depend\u00eancias foram instalados.</li> <li>Executa os Testes de qualquer forma, garantindo que tudo esteja funcionando.</li> </ul> pre-commit<pre><code>#!/bin/bash\n\nmake format\n\nif git diff --cached --name-only | grep -q '^app/'; then\n  make lint\nfi\n\nif git diff --cached --name-only | grep -q '^tests/'; then\n  make lint-tests\nfi\n\nif git diff --cached --name-only | grep -q '^requirements/'; then\n  make audit\nfi\n\nmake test\n</code></pre> <p>Tip</p> <p>N\u00e3o se esque\u00e7a de conceder as permiss\u00f5es necess\u00e1rias para os arquivos de hook. <pre><code>chmod +x .git/hooks/pre-commit\n</code></pre></p>"},{"location":"pt/hooks-actions/#github-actions","title":"GitHub Actions","text":"<p>No lado do servidor, esta aplica\u00e7\u00e3o usa o GitHub Actions para criar workflows que ser\u00e3o acionados automaticamente quando ocorrer um evento <code>push</code> no reposit\u00f3rio remoto do GitHub, automatizando a execu\u00e7\u00e3o autom\u00e1tica dos trabalhos de verifica\u00e7\u00e3o e implanta\u00e7\u00e3o.</p>"},{"location":"pt/hooks-actions/#trabalho-de-verificacao","title":"Trabalho de Verifica\u00e7\u00e3o","text":"<p>Para Linting and Testes, ele verificar\u00e1 o reposit\u00f3rio, configurar\u00e1 o Python, instalar\u00e1 o Poetry, carregar\u00e1 o venv em cache e instalar\u00e1 todas as depend\u00eancias necess\u00e1rias, como Pytest e Pylint, para realizar opera\u00e7\u00f5es de lint e teste no c\u00f3digo, garantindo que tudo esteja bem.</p>"},{"location":"pt/hooks-actions/#trabalho-de-documentacao","title":"Trabalho de Documenta\u00e7\u00e3o","text":"<p>Ele verificar\u00e1 o reposit\u00f3rio, configurar\u00e1 o Python, carregar\u00e1 o venv em cache, e instalar\u00e1 as bibliotecas MkDocs e Material for MkDocs para configurar, fazer o deploy e publicar a p\u00e1gina web est\u00e1tica da documenta\u00e7\u00e3o da aplica\u00e7\u00e3o, escrita em Markdown, e que ser\u00e1 hospedada no GitHub Pages no dom\u00ednio <code>github.io</code> do GitHub.</p>"},{"location":"pt/license/","title":"Licen\u00e7a","text":""},{"location":"pt/license/#licenca-mit","title":"Licen\u00e7a MIT","text":"<p>Copyright \u00a9 2024 Maur\u00edcio da Silva Batista</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p> Agosto, 2024</p> <p>Note</p> <p>Voc\u00ea tamb\u00e9m pode ver o arquivo de licen\u00e7a no GitHub.</p>"},{"location":"pt/reference/","title":"Refer\u00eancia","text":"<p>Aqui est\u00e1 o c\u00f3digo ou refer\u00eancia da API Web, fornecendo detalhes sobre as classes, m\u00e9todos, par\u00e2metros, atributos e cada parte deste aplica\u00e7\u00e3o.</p> <pre><code>.\n\u251c\u2500\u2500 app\n\u2502   \u251c\u2500\u2500 adapters/\n\u2502   |   \u251c\u2500\u2500 factories/\n\u2502   |   \u251c\u2500\u2500 gateway/\n\u2502   |   \u251c\u2500\u2500 helpers/\n|   |   \u2514\u2500\u2500 presenters/\n\u2502   \u251c\u2500\u2500 core/\n\u2502   |   \u251c\u2500\u2500 common/\n\u2502   |   \u251c\u2500\u2500 config/\n\u2502   |   \u251c\u2500\u2500 data/\n\u2502   |   \u251c\u2500\u2500 domain/\n|   |   \u2514\u2500\u2500 usecases/\n\u2502   \u251c\u2500\u2500 framework/\n\u2502   |   \u251c\u2500\u2500 dependencies/\n\u2502   |   \u251c\u2500\u2500 exceptions/\n\u2502   |   \u251c\u2500\u2500 fastapi/\n\u2502   |   \u2514\u2500\u2500 middleware/\n\u2502   \u2514\u2500\u2500 utils/\n</code></pre> <p></p>"},{"location":"pt/reference/#searchparams","title":"SearchParams","text":"<p> Validador de tipo para par\u00e2metros de busca Chave da API e Palavras-chave <code>c\u00f3digo fonte</code> <code>core.common</code> <code>app/core/common/types.py</code></p> <pre><code>class SearchParams(\n    api_key: str = Field(),\n    keywords: Keywords = Field()\n)\n</code></pre> <p>Um validador de modelo criado usando o Pydantic <code>BaseModel</code> para os par\u00e2metros Chave da API e Palavras-chave usados na busca da Scopus Search API, validando sua tipagem e valores usando a fun\u00e7\u00e3o Pydantic <code>Field()</code>.</p> <p>Note</p> <p>Leia mais sobre as regras e especifica\u00e7\u00f5es da Chave da API e Palavras-chave na se\u00e7\u00e3o de requisitos.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>api_key</code> <code>str</code> Par\u00e2metro de busca Chave da API <code>keywords</code> <code>Keywords</code> Par\u00e2metro de busca Palavras-chave <p></p>"},{"location":"pt/reference/#scopusresult","title":"ScopusResult","text":"<p> Serializador para o item do campo entry no esquema JSON da resposta <code>c\u00f3digo fonte</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusResult(\n    link: str = Field(),\n    url: str = Field()\n    scopus_id: str = Field()\n)\n</code></pre> <p>Um serializador de modelo criado usando o Pydantic <code>BaseModel</code> para os itens da entrada na resposta da busca da Scopus Search API, convertendo-os para o c\u00f3digo usando a fun\u00e7\u00e3o Pydantic <code>Field()</code>.</p> Par\u00e2metro Tipo Campo JSON Descri\u00e7\u00e3o <code>link</code> <code>str</code> <code>@_fa</code> Links de navega\u00e7\u00e3o no n\u00edvel superior <code>url</code> <code>str</code> <code>prism:url</code> URI da Content Abstract Retrieval API <code>scopus_id</code> <code>str</code> <code>dc:identifier</code> ID Scopus do artigo <p></p>"},{"location":"pt/reference/#scopussearch","title":"ScopusSearch","text":"<p> Serializador para o esquema JSON da resposta da Scopus Search API <code>c\u00f3digo fonte</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusSearch(\n    total_results: int = Field(),\n    items_per_page: int = Field(),\n    entry: list[ScopusResult] = Field()\n)\n</code></pre> <p>Um serializador de modelo constru\u00eddo usando o Pydantic <code>BaseModel</code> para a resposta JSON da Scopus Search API, convertendo-a para o c\u00f3digo usando a fun\u00e7\u00e3o Pydantic <code>Field()</code>.</p> <p>Antes da valida\u00e7\u00e3o, ele acessar\u00e1 o campo JSON <code>search-results</code> para achatar a hierarquia e obter os dados reais.</p> <p>Info</p> <p>Achatamento (Flattening) \u00e9 o processo de transformar uma estrutura de dados JSON aninhada em um \u00fanico n\u00edvel de pares chave-valor.</p> Par\u00e2metro Tipo Campo JSON Descri\u00e7\u00e3o <code>total_results</code> <code>int</code> <code>opensearch:totalResults</code> N\u00famero total de artigos encontrados <code>items_per_page</code> <code>int</code> <code>opensearch:itemsPerPage</code> N\u00famero de artigos divididos em cada p\u00e1gina <code>entry</code> <code>list[ScopusResult]</code> <code>entry</code> Listas de dados dos artigos com os campos especificados na busca <p>Note</p> <p>Leia mais sobre o corpo JSON retornado e seus campos.</p>"},{"location":"pt/reference/#pages_count","title":"pages_count","text":"<pre><code>def pages_count() -&gt; int\n</code></pre> <p>Calcula o n\u00famero de p\u00e1ginas dividindo o total de resultados pelo n\u00famero de itens por p\u00e1gina, retornando o menor <code>int</code> usando a fun\u00e7\u00e3o math <code>ceil()</code>.</p> <p></p>"},{"location":"pt/reference/#scopusquotaratelimit","title":"ScopusQuotaRateLimit","text":"<p> Serializador para as respostas das APIs da Scopus <code>c\u00f3digo fonte</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusQuotaRateLimit(\n    reset: float = Field(),\n    status: str = Field(),\n    error_code: str = Field()\n)\n</code></pre> <p>Um serializador de modelo constru\u00eddo usando Pydantic <code>BaseModel</code> para as respostas das APIs da Scopus, convertendo-as em c\u00f3digo usando a fun\u00e7\u00e3o Pydantic <code>Field()</code>.</p> <p>Antes da valida\u00e7\u00e3o, ele recuperar\u00e1 os cabe\u00e7alhos da resposta e obter\u00e1 o campo JSON <code>error-response</code>, se presente.</p> Par\u00e2metro Tipo Campo da Resposta Descri\u00e7\u00e3o <code>reset</code> <code>float</code> <code>X-RateLimit-Reset</code> Data/hora em Epoch segundos quando a cota da API ser\u00e1 redefinida <code>status</code> <code>str</code> <code>X-ELS-Status</code> Status da Scopus API/servidor Elsevier <code>error_code</code> <code>str</code> <code>error-code</code> C\u00f3digo de erro da Scopus API/servidor Elsevier <p>Info</p> <p>Epoch \u00e9 o n\u00famero de segundos que se passaram desde 1\u00ba de janeiro de 1970, tamb\u00e9m conhecido como tempo Unix.</p>"},{"location":"pt/reference/#reset_datetime","title":"reset_datetime","text":"<pre><code>def reset_datetime() -&gt; str\n</code></pre> <p>Converte a data e hora da epoch do cabe\u00e7alho de redefini\u00e7\u00e3o de cota para <code>datetime</code>, formate-o e retorne-o como uma <code>str</code> mais compreens\u00edvel da data e hora, informando quando a cota de solicita\u00e7\u00e3o da API ser\u00e1 redefinida.</p>"},{"location":"pt/reference/#quota_exceeded","title":"quota_exceeded","text":"<pre><code>def quota_exceeded() -&gt; int\n</code></pre> <p>Verifique o valor do cabe\u00e7alho de status da resposta, retornando <code>True</code> se for igual a <code>QUOTA_EXCEEDED - Quota Exceeded</code> ou <code>False</code> caso contr\u00e1rio.</p> <p>Note</p> <p>Saiba mais sobre o limite de cota de solicita\u00e7\u00f5es de API.</p>"},{"location":"pt/reference/#rate_limit_exceeded","title":"rate_limit_exceeded","text":"<pre><code>def rate_limit_exceeded() -&gt; bool\n</code></pre> <p>Verifique o valor do campo de c\u00f3digo de erro da resposta, retornando <code>True</code> se for igual a <code>RATE_LIMIT_EXCEEDED</code> ou <code>False</code> caso contr\u00e1rio.</p> <p>Note</p> <p>Saiba mais sobre o limite da taxa de limita\u00e7\u00e3o de solicita\u00e7\u00e3o da API.</p> <p></p>"},{"location":"pt/reference/#scopusabstract","title":"ScopusAbstract","text":"<p> Serializador para o esquema JSON da resposta da Scopus Abstract Retrieval API <code>c\u00f3digo fonte</code> <code>core.data</code> <code>app/core/data/serializers.py</code></p> <pre><code>class ScopusAbstract(\n    url: str = Field(),\n    scopus_id: str = Field(),\n    authors: str = Field(),\n    title: str = Field(),\n    publication_name: str = Field(),\n    abstract: str = Field(),\n    date: str = Field(),\n    eid: str = Field(),\n    doi: str = Field(),\n    volume: str = Field(),\n    citations: str = Field()\n)\n</code></pre> <p>Um serializador de modelo constru\u00eddo usando o Pydantic <code>BaseModel</code> para os resumos Scopus dos artigos na resposta JSON, convertendo-os em c\u00f3digo usando a fun\u00e7\u00e3o Pydantic <code>Field()</code> e definindo <code>null</code> para todos os campos que n\u00e3o forem retornados.</p> <p>Antes da valida\u00e7\u00e3o, a hierarquia ser\u00e1 achatada para obter os dados reais. Primeiro, o campo JSON <code>abstracts-retrieval-response</code> ser\u00e1 acessado, ent\u00e3o o campo <code>authors</code> ser\u00e1 definido a partir do campo JSON <code>author</code>, obtido do campo JSON <code>authors</code> se retornado ou do campo JSON <code>dc:creator</code> caso contr\u00e1rio.</p> <p>Info</p> <p>Achatamento (Flattening) \u00e9 o processo de transformar uma estrutura de dados JSON aninhada em um \u00fanico n\u00edvel de pares chave-valor.</p> <p>Al\u00e9m disso, os nomes dos autores ser\u00e3o selecionados do campo JSON <code>ce:indexed-name</code> dos dados do autor, para serem concatenados e retornados. Finalmente, o campo JSON <code>coredata</code> ser\u00e1 acessado e atualizado com os dados do autor antes de retorn\u00e1-los.</p> <p>Quando desserializado em <code>dict</code>, o campo <code>date</code>, quando n\u00e3o <code>null</code>, ser\u00e1 formatado como <code>DD-MM-AAAA</code>.</p> Par\u00e2metro Tipo Campo JSON Descri\u00e7\u00e3o <code>url</code> <code>str</code> <code>link ref=scopus</code> URL da p\u00e1gina de visualiza\u00e7\u00e3o do artigo do Scopus <code>scopus_id</code> <code>str</code> <code>dc:identifier</code> ID Scopus do artigo <code>authors</code> <code>str</code> <code>authors</code> or <code>dc:creator</code> Lista completa de autores ou apenas o primeiro autor <code>title</code> <code>str</code> <code>dc:title</code> T\u00edtulo do artigo <code>publication_name</code> <code>str</code> <code>prism:publicationName</code> T\u00edtulo da fonte <code>abstract</code> <code>str</code> <code>dc:description</code> Resumo completo do artigo <code>date</code> <code>str</code> <code>prism:coverDate</code> Data de publica\u00e7\u00e3o <code>eid</code> <code>str</code> <code>eid</code> ID Eletr\u00f4nico do artigo <code>doi</code> <code>str</code> <code>prism:doi</code> Identificador de Objeto do Documento <code>volume</code> <code>str</code> <code>prism:volume</code> Identificador para uma publica\u00e7\u00e3o em s\u00e9rie <code>citations</code> <code>str</code> <code>citedby-count</code> Contagem de cita\u00e7\u00f5es <p>Note</p> <p>Leia mais sobre os campos retornados na documenta\u00e7\u00e3o do Scopus Search Views.</p> <p></p>"},{"location":"pt/reference/#accesstoken","title":"AccessToken","text":"<p> Obt\u00e9m e valida o Token de Acesso <code>c\u00f3digo fonte</code> <code>framework.dependencies</code> <code>app/framework/dependencies/access_token.py</code></p> <pre><code>class AccessToken()(\n    request: Request,\n    access_token: Annotated[str | None, TokenHeader] = None\n)\n</code></pre> <p>Uma depend\u00eancia de rota que implementa o m\u00e9todo <code>__call__</code> para criar uma inst\u00e2ncia cham\u00e1vel que obter\u00e1 e validar\u00e1 o cabe\u00e7alho Token de Acesso por meio da fun\u00e7\u00e3o FastAPI <code>Header()</code> ou da solicita\u00e7\u00e3o.</p> <p>Para fornecer um pouco mais de seguran\u00e7a, o aplica\u00e7a\u00f5 gerar\u00e1 automaticamente um Token que ser\u00e1 passado para a p\u00e1gina web da API da aplica\u00e7\u00e3o, que por sua vez o enviar\u00e1 no cabe\u00e7alho da solicita\u00e7\u00e3o para valida\u00e7\u00e3o.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>request</code> <code>Request</code> O objeto FastAPI <code>Request</code> <code>access_token</code> <code>str</code> or <code>None</code> Descritor e validador do cabe\u00e7alho Token da solicita\u00e7\u00e3o. Default: <code>None</code> <p></p>"},{"location":"pt/reference/#queryparams","title":"QueryParams","text":"<p> Obt\u00e9m e valida os Query Params <code>c\u00f3digo fonte</code> <code>framework.dependencies</code> <code>app/framework/dependencies/query_params.py</code></p> <pre><code>class QueryParams()(\n    request: Request,\n    api_key: Annotated[str | None, APIKeyQuery] = None,\n    keywords: Annotated[Keywords | None, KeywordsQuery] = None\n)\n</code></pre> <p>Uma depend\u00eancia de rota que implementa o m\u00e9todo <code>__call__</code> para criar uma inst\u00e2ncia cham\u00e1vel que obter\u00e1 e validar\u00e1 os par\u00e2metros de consulta Chave da API e Palavras-chave por meio da fun\u00e7\u00e3o FastAPI <code>Query()</code> ou da solicita\u00e7\u00e3o.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>request</code> <code>Request</code> O objeto FastAPI <code>Request</code> <code>api_key</code> <code>str</code> or <code>None</code> Descritor e validador do Query Param da solicita\u00e7\u00e3o Chave da API. Default: <code>None</code> <code>keywords</code> <code>Keywords</code> or <code>None</code> Descritor e validador do Query Param da solicita\u00e7\u00e3o Palavras-chave. Default: <code>None</code>"},{"location":"pt/reference/#equals","title":"equals","text":"<pre><code>def equals(api_key: str, keywords: list[str]) -&gt; bool\n</code></pre> <p>Compara a Chave da API e as Palavras-chave da inst\u00e2ncia com outra Chave de API e Palavras-chave, retorna <code>True</code> se forem iguais ou <code>False</code> caso contr\u00e1rio.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>api_key</code> <code>str</code> Chave da API para compara\u00e7\u00e3o <code>keywords</code> <code>list[str]</code> Keywords para compara\u00e7\u00e3o"},{"location":"pt/reference/#to_dict","title":"to_dict","text":"<pre><code>def to_dict() -&gt; dict[str, str | Keywords]\n</code></pre> <p>Serializa os atributos de inst\u00e2ncia Chave da API e Palavras-chave como um <code>dict</code>.</p> <p></p>"},{"location":"pt/reference/#httpretryhelper","title":"HTTPRetryHelper","text":"<p> Fa\u00e7a solicita\u00e7\u00f5es HTTP com mecanismos de throttling e retry <code>c\u00f3digo fonte</code> <code>adapters.helpers</code> <code>app/adapters/helpers/http_retry_helper.py</code></p> <pre><code>class HTTPRetryHelper(\n    for_search: bool = None\n)\n</code></pre> <p>Um cliente HTTP para fazer solicita\u00e7\u00f5es com os seguintes mecanismos:</p> <ul> <li>Throttling: controla a taxa de fluxo de dados em um servi\u00e7o limitando o n\u00famero de solicita\u00e7\u00f5es da API que um usu\u00e1rio pode fazer em um determinado per\u00edodo.</li> <li>Retry: tenta novamente opera\u00e7\u00f5es com falha automaticamente para se recuperar de falhas inesperadas e continuar funcionando corretamente.</li> <li>Rate Limiting: limita o tr\u00e1fego da rede controlando o n\u00famero de solicita\u00e7\u00f5es que podem ser feitas em um determinado per\u00edodo de tempo.</li> <li>Session: persiste certos par\u00e2metros e reutiliza a mesma conex\u00e3o em todas as solicita\u00e7\u00f5es.</li> <li>Cache: armazena dados temporariamente para que futuras solicita\u00e7\u00f5es desses dados possam ser atendidas mais rapidamente.</li> </ul> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>for_search</code> <code>bool</code> Indica na mensagem do log se a solicita\u00e7\u00e3o ser\u00e1 direcionada para a Scopus Search API ou n\u00e3o. Default: <code>None</code>"},{"location":"pt/reference/#mount_session","title":"mount_session","text":"<pre><code>def mount_session(headers: Headers) -&gt; None\n</code></pre> <p>Inicializa a sess\u00e3o e a monta registrando o adaptador de conex\u00e3o de controle de cache com a configura\u00e7\u00e3o de retry.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>headers</code> <code>Headers</code> Os cabe\u00e7alhos HTTP para enviar na solicita\u00e7\u00e3o"},{"location":"pt/reference/#close","title":"close","text":"<pre><code>def close() -&gt; None\n</code></pre> <p>Fecha o adaptador de conex\u00e3o de controle de cache e a sess\u00e3o.</p>"},{"location":"pt/reference/#request","title":"request","text":"<pre><code>def request(url: str) -&gt; Response\n</code></pre> <p>Inicializa, prepara com sess\u00e3o, envia a solicita\u00e7\u00e3o, e ent\u00e3o retorna a resposta como um objeto Requests <code>Response</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>url</code> <code>str</code> A URL para enviar a solicita\u00e7\u00e3o <p></p>"},{"location":"pt/reference/#urlbuilderhelper","title":"URLBuilderHelper","text":"<p> Gera e formata URLs para as solicita\u00e7\u00f5es HTTP <code>c\u00f3digo fonte</code> <code>adapters.helpers</code> <code>app/adapters/helpers/url_builder_helper.py</code></p> <pre><code>class URLBuilderHelper()\n</code></pre> <p>Um construtor para gerar as URLs de recursos das APIs da Scopus e a URL de pagina\u00e7\u00e3o.</p>"},{"location":"pt/reference/#get_search_url","title":"get_search_url","text":"<pre><code>def get_search_url(keywords: Keywords) -&gt; str\n</code></pre> <p>Gera a URL do recurso da Scopus Search API e a retorna como <code>str</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>keywords</code> <code>Keywords</code> As Palavras-chave que ser\u00e3o utilizadas na busca"},{"location":"pt/reference/#get_pagination_url","title":"get_pagination_url","text":"<pre><code>def get_pagination_url(page: int) -&gt; str\n</code></pre> <p>Gera a URL de pagina\u00e7\u00e3o da Scopus Search API e a retorna como <code>str</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>page</code> <code>int</code> O \u00edndice de p\u00e1gina para o in\u00edcio da pagina\u00e7\u00e3o"},{"location":"pt/reference/#get_article_page_url","title":"get_article_page_url","text":"<pre><code>def get_abstract_url(url: str) -&gt; str\n</code></pre> <p>Gera a URL do recurso da Scopus Abstract Retrieval API e a retorna como <code>str</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>url</code> <code>str</code> A URL do recurso base da Scopus Abstract Retrieval API <p></p>"},{"location":"pt/reference/#scopussearchapi","title":"ScopusSearchAPI","text":"<p> Busca e recupera artigos por meio da Scopus Search API <code>c\u00f3digo fonte</code> <code>adapters.gateway</code> <code>app/adapters/gateway/scopus_search_api.py</code></p> <pre><code>class ScopusSearchAPI(\n    http_helper: HttpRetry,\n    url_builder: UrlBuilder\n)\n</code></pre> <p>Primeiro, os cabe\u00e7alhos da solicita\u00e7\u00e3o para a API da Scopus ser\u00e3o constru\u00eddos com a <code>Chave da API</code>, a URL do recurso \u00e9 constru\u00edda com a <code>Chave da API</code> e <code>Palavras-chave</code> como par\u00e2metros de pesquisa, e ent\u00e3o os artigos ser\u00e3o buscados por meio da Scopus Search API. Em seguida, a resposta \u00e9 validada, recuperando os artigos se bem-sucedida ou lidando com erros caso contr\u00e1rio.</p> <p>Um erro ser\u00e1 retornado quando: nenhum artigo for encontrado, a cota da <code>Chave da API</code> for excedida, a Scopus Search API retornar um erro de status HTTP, e quando a resposta JSON n\u00e3o puder ser validada.</p> <p>Note</p> <p>Saiba mais sobre a cota de quantos dados uma Chave da API pode recuperar.</p> <p>Os dados dos artigos ser\u00e3o validados, assumindo como padr\u00e3o <code>null</code> para os campos que n\u00e3o forem retornados. Ele pode usar threads com o ThreadPoolExecutor e construir a URL com o \u00edndice da p\u00e1gina quando houver v\u00e1rios artigos para buscar com pagina\u00e7\u00e3o.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>http_helper</code> <code>HttpRetry</code> Injeta o <code>HttpRetryHelper</code> para fazer as solicita\u00e7\u00f5es <code>url_builder</code> <code>UrlBuilder</code> Injeta o <code>UrlBuilderHelper</code> para construir as URLs"},{"location":"pt/reference/#search_articles","title":"search_articles","text":"<pre><code>def search_articles(search_params: SearchParams) -&gt; list[ScopusResult]\n</code></pre> <p>Busca artigos por meio da Scopus Search API, compila e retorna todos os dados recuperados em uma <code>list</code> de <code>ScopusResult</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>search_params</code> <code>SearchParams</code> Par\u00e2metros de pesquisa <code>Chave de API</code> e <code>Palavras-chave</code> validados <p></p>"},{"location":"pt/reference/#scopusabstractretrievalapi","title":"ScopusAbstractRetrievalAPI","text":"<p> Recupera resumos Scopus por meio da Scopus Abstract Retrieval API <code>c\u00f3digo fonte</code> <code>adapters.gateway</code> <code>app/adapters/gateway/scopus_abstract_retrieval_api.py</code></p> <pre><code>class ScopusAbstractRetrievalAPI(\n    http_helper: HttpRetry,\n    url_builder: UrlBuilder\n)\n</code></pre> <p>Primeiro, os cabe\u00e7alhos da solicita\u00e7\u00e3o para a API da Scopus ser\u00e3o criados com a <code>Chave da API</code>, a URL do recurso \u00e9 criada a partir da URL do recurso base e, em seguida, os resumos Scopus ser\u00e3o recuperados por meio da Scopus Abstracts Retrieval API. A resposta \u00e9 ent\u00e3o validada, recuperando os resumos se bem-sucedida ou manipulando erros caso contr\u00e1rio.</p> <p>Um erro ser\u00e1 retornado quando: a cota da <code>Chave da API</code> for excedida, a Scopus Abstract Retrieval API retornar um erro de status HTTP, e quando a resposta JSON n\u00e3o puder ser validada.</p> <p>Os dados dos resumos ser\u00e3o validados, assumindo como padr\u00e3o <code>null</code> para os campos que n\u00e3o forem retornados. Ele pode usar threads com o ThreadPoolExecutor quando houver v\u00e1rios resumos para recuperar.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>http_helper</code> <code>HttpRetry</code> Injeta o <code>HttpRetryHelper</code> para fazer as solicita\u00e7\u00f5es <code>url_builder</code> <code>UrlBuilder</code> Injeta o <code>UrlBuilderHelper</code> para construir as URLs"},{"location":"pt/reference/#retrieve_abstracts","title":"retrieve_abstracts","text":"<pre><code>def retrieve_abstracts(api_key: str, entry: list[ScopusResult]) -&gt; DataFrame\n</code></pre> <p>Recupera resumos Scopus por meio da Scopus Abstract Retrieval API, compila e retorna todos os dados buscados em um Pandas <code>DataFrame</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>api_key</code> <code>str</code> Par\u00e2metro de pesquisa <code>Chave de API</code> validado <code>entry</code> <code>list[ScopusResult]</code> Lista dos dados dos artigos <p></p>"},{"location":"pt/reference/#articlessimilarityfilter","title":"ArticlesSimilarityFilter","text":"<p> Filtrar artigos de autores id\u00eanticos com t\u00edtulos semelhantes <code>c\u00f3digo fonte</code> <code>core.usecases</code> <code>app/core/usecases/articles_similarity_filter.py</code></p> <pre><code>class ArticlesSimilarityFilter()\n</code></pre> <p>Do <code>DataFrame</code> contendo todas as informa\u00e7\u00f5es dos artigos j\u00e1 coletadas, os autores s\u00e3o contados, e aqueles que foram repetidos pelo menos duas vezes s\u00e3o selecionados. Ent\u00e3o, dos artigos desses autores, seus respectivos t\u00edtulos s\u00e3o selecionados e comparados usando a fun\u00e7\u00e3o TheFuzz <code>ratio()</code>, e aqueles cuja taxa de similaridade \u00e9 de pelo menos <code>80%</code> s\u00e3o coletados e descartados.</p> <p>Note</p> <p>Ap\u00f3s considera\u00e7\u00e3o e testes, definimos a taxa de similaridade para a sele\u00e7\u00e3o de artigos em <code>80%</code>.</p> <p>Para todos os artigos semelhantes reunidos, o primeiro \u00e9 mantido e o restante \u00e9 descartado. Se todos os autores forem \u00fanicos, ou seja, nenhum \u00e9 repetido, ou nenhum t\u00edtulo semelhante foi encontrado, ele retornar\u00e1 o mesmo <code>DataFrame</code>.</p>"},{"location":"pt/reference/#filter","title":"filter","text":"<pre><code>def filter(dataframe: DataFrame) -&gt; DataFrame\n</code></pre> <p>Filtra artigos do <code>DataFrame</code> se eles forem de autores id\u00eanticos com t\u00edtulos semelhantes, e ent\u00e3o todos os dados filtrados ser\u00e3o retornados em um Pandas <code>DataFrame</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>dataframe</code> <code>DataFrame</code> O <code>DataFrame</code> contendo todas as informa\u00e7\u00f5es do artigo coletadas a serem filtradas <p></p>"},{"location":"pt/reference/#scopusarticlesaggregator","title":"ScopusArticlesAggregator","text":"<p> Re\u00fane, filtra e compila dados de artigos Scopus <code>c\u00f3digo fonte</code> <code>core.usecases</code> <code>app/core/usecases/scopus_articles_aggregator.py</code></p> <pre><code>class ScopusArticlesAggregator(\n    search_api: SearchAPI,\n    abstract_api: AbstractAPI,\n    similarity_filter: SimilarityFilter\n)\n</code></pre> <p>Primeiro, os artigos s\u00e3o pesquisados por meio da Scopus Search API usando os par\u00e2metros de busca fornecidos, e seus resumos Scopus s\u00e3o recuperados por meio da Scopus Abstract Retrieval API.</p> <p>Em seguida, os artigos que s\u00e3o duplicatas exatas s\u00e3o removidos, aqueles com os mesmos autores e t\u00edtulos tamb\u00e9m s\u00e3o descartados, e artigos semelhantes s\u00e3o filtrados usando <code>ArticlesSimilarityFilter</code>.</p> <p>Um erro \u00e9 retornado quando nenhum artigo \u00e9 encontrado.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>search_api</code> <code>SearchAPI</code> Injeta o <code>ScopusSearchAPI</code> para pesquisar e obter os artigos por meio da Scopus Search API <code>articles_scraper</code> <code>abstract_api</code> Injeta o <code>ScopusAbstractRetrievalAPI</code> para recuperar os resumos Scopus por meio da ScopusAbstractRetrievalAPI <code>similarity_filter</code> <code>SimilarityFilter</code> Injeta o <code>ArticlesSimilarityFilter</code> para filtrar os artigos de autores id\u00eanticos com t\u00edtulos semelhantes"},{"location":"pt/reference/#get_articles","title":"get_articles","text":"<pre><code>def get_articles(params: SearchParams) -&gt; FileResponse\n</code></pre> <p>Re\u00fane e filtra dados de artigos Scopus, grava e salva todos os artigos restantes em um arquivo CSV e os retorna como um objeto FastAPI <code>FileResponse</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>params</code> <code>SearchParams</code> Par\u00e2metros de busca Chave da API e Palavras-chave validados <p></p>"},{"location":"pt/reference/#templatecontextbuilder","title":"TemplateContextBuilder","text":"<p> Gera valores de contexto para respostas de template <code>c\u00f3digo fonte</code> <code>adapters.presenters</code> <code>app/adapters/presenters/template_context.py</code></p> <pre><code>class TemplateContextBuilder(\n    request: Request\n)\n</code></pre> <p>Compila e cria dados, como valores de contexto, para os templates que o Jinja renderiza, passando-os e carregando-os em templates HTML que s\u00e3o retornados como um objeto Jinja2Templates <code>TemplateResponse</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>request</code> <code>Request</code> O objeto FastAPI <code>Request</code>"},{"location":"pt/reference/#get_web_app_context","title":"get_web_app_context","text":"<pre><code>def get_web_app_context() -&gt; Context\n</code></pre> <p>Retorna dados para construir o template da resposta da p\u00e1gina web da API, retornando o objeto da solicita\u00e7\u00e3o, o nome do template, e os valores de contexto.</p> <p>Sobre os valores do Contexto:</p> Campo Descri\u00e7\u00e3o <code>request</code> O objeto FastAPI <code>Request</code> <code>version</code> Vers\u00e3o da aplica\u00e7\u00e3o. Exemplo: <code>3.0.0</code> <code>repository</code> URL do reposit\u00f3rio GitHub da aplica\u00e7\u00e3o <code>swagger_url</code> URL da p\u00e1gina do Swagger. Default: <code>/</code> <code>token</code> Token da aplica\u00e7\u00e3o <code>filename</code> Nome do arquivo CSV. Default: <code>articles.csv</code> <code>table_url</code> URL da p\u00e1gina web da tabela. Default: <code>/scopus-survey/api/table</code> <code>search_url</code> URL da API. Default: <code>/scopus-survey/api/search-articles</code> <code>description</code> Descri\u00e7\u00e3o da aplica\u00e7\u00e3o"},{"location":"pt/reference/#get_table_context","title":"get_table_context","text":"<pre><code>def get_table_context() -&gt; Context\n</code></pre> <p>Retorna dados para construir o template da resposta da p\u00e1gina web da Tabela, retornando o objeto da solicita\u00e7\u00e3o, o nome do template, e os valores de contexto.</p> <p>Sobre os valores do Contexto:</p> Campo Descri\u00e7\u00e3o <code>request</code> O objeto FastAPI <code>Request</code> <code>version</code> Vers\u00e3o da aplica\u00e7\u00e3o. Exemplo: <code>3.0.0</code> <code>repository</code> URL do reposit\u00f3rio GitHub da aplica\u00e7\u00e3o <code>swagger_url</code> URL da p\u00e1gina do Swagger. Default: <code>/</code> <code>content</code> Conte\u00fado da tabela. Lista dos artigos encontrados ou <code>None</code> se n\u00e3o houver artigos <code>web_app_url</code> URL da p\u00e1gina web da aplica\u00e7\u00e3o. Default: <code>/scopus-survey/api</code> <p></p>"},{"location":"pt/reference/#exceptionjson","title":"ExceptionJSON","text":"<p> Gera respostas de representa\u00e7\u00e3o JSON para exce\u00e7\u00f5es <code>c\u00f3digo fonte</code> <code>adapters.presenters</code> <code>app/adapters/presenters/exception_json.py</code></p> <pre><code>class ExceptionJSON(\n    request: Request,\n    code: int,\n    message: str,\n    errors: Errors = None\n)\n</code></pre> <p>Um presenter criado usando FastAPI <code>JSONResponse</code> que gera respostas de representa\u00e7\u00e3o JSON para exce\u00e7\u00f5es. Os detalhes do erro s\u00e3o filtrados para remover o erro <code>PydanticUndefined</code> de Pydantic <code>ValidationError</code> e os dados do objeto <code>Request</code> s\u00e3o recuperados.</p> <p>O timestamp datetime \u00e9 definido como uma <code>str</code> no formato ISO e, finalmente, todos os dados s\u00e3o convertidos e codificados usando a fun\u00e7\u00e3o FastAPI <code>jsonable_encoder()</code>.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>request</code> <code>Request</code> O objeto FastAPI <code>Request</code> <code>code</code> <code>int</code> C\u00f3digo de erro de status HTTP <code>message</code> <code>str</code> Descri\u00e7\u00e3o da exce\u00e7\u00e3o <code>errors</code> <code>Errors</code> Metadados e detalhes do erro <p></p>"},{"location":"pt/reference/#excecoes-e-erros","title":"Exce\u00e7\u00f5es e Erros","text":"<p>Exce\u00e7\u00f5es HTTP s\u00e3o modelos criados a partir do FastAPI <code>HTTPException</code> que representam c\u00f3digos de status de erro HTTP enviados na resposta para notificar o cliente usando sua aplica\u00e7\u00e3o de um erro. Os implementados s\u00e3o <code>401 Unauthorized</code>, <code>404 NotFound</code>, <code>422 UnprocessableContent</code>, <code>500 InternalError</code>, <code>502 BadGateway</code> e <code>504 GatewayTimeout</code>.</p> <p>Erros da aplica\u00e7\u00e3o s\u00e3o modelos criados a partir da classe base <code>Exception</code> que indica que ocorreu um erro na parte central da opera\u00e7\u00e3o/processamento da aplica\u00e7\u00e3o. Os implementados s\u00e3o <code>InterruptError</code> para o sinal de interrup\u00e7\u00e3o de desligamento/sa\u00edda e <code>ScopusAPIError</code> para o erro de status HTTP da Scopus Search API.</p> <p>Manipuladores de exce\u00e7\u00e3o s\u00e3o rotinas projetadas para processar e responder rapidamente \u00e0 ocorr\u00eancia de exce\u00e7\u00f5es/erros ou situa\u00e7\u00f5es especiais espec\u00edficas durante a execu\u00e7\u00e3o de um programa, retornando sua representa\u00e7\u00e3o JSON. Os manipuladores implementados s\u00e3o para Starlette <code>HTTPException</code>, FastAPI <code>HTTPException</code>, <code>RequestValidationError</code>, <code>ResponseValidationError</code>, <code>ValidationError</code>, <code>HTTPException</code>, <code>ApplicationError</code> e <code>Exception</code>.</p> <p>Sobre a Resposta JSON de Exce\u00e7\u00e3o:</p> Campo Tipo Descri\u00e7\u00e3o <code>success</code> <code>bool</code> Resultado da opera\u00e7\u00e3o, que \u00e9 um fracasso j\u00e1 que \u00e9 uma exce\u00e7\u00e3o. Deafult: <code>False</code> <code>code</code> <code>int</code> C\u00f3digo de status de erro HTTP <code>message</code> <code>str</code> Descri\u00e7\u00e3o da exce\u00e7\u00e3o/erro <code>request</code> <code>dict[str,Any]</code> Cont\u00e9m alguns dados de solicita\u00e7\u00e3o em um <code>dict</code> <code>errors</code> <code>Errors</code> Cont\u00e9m alguns detalhes da exce\u00e7\u00e3o/erro em um <code>dict</code>. Deafult: <code>None</code> <code>timestamp</code> <code>str</code> O timestamp de data e hora como uma <code>str</code> no formato ISO <p>Sobre o campo <code>request</code>:</p> Campo Descri\u00e7\u00e3o <code>host</code> O host do cliente da solicita\u00e7\u00e3o. Default: <code>127.0.0.1</code> <code>port</code> A porta do cliente da solicita\u00e7\u00e3o. Default: <code>8000</code> <code>method</code> O method da solicita\u00e7\u00e3o <code>url</code> O caminho da URL da solicita\u00e7\u00e3o <code>headers</code> Os cabe\u00e7alhos da solicita\u00e7\u00e3o <p>Sobre e os detalhes do erro <code>ScopusAPIError</code>:</p> Campo Descri\u00e7\u00e3o <code>status</code> C\u00f3digo de erro de status HTTP das APIs da Scopus <code>api_error</code> Descri\u00e7\u00e3o do erro de status da resposta das APIs da Scopus. Deafult: <code>null</code> <code>content</code> O pr\u00f3prio conte\u00fado da resposta JSON das APIs da Scopus <p>Note</p> <p>Veja a descri\u00e7\u00e3o do erro de status das respostas na documenta\u00e7\u00e3o.</p> <p></p>"},{"location":"pt/reference/#middlewares","title":"Middlewares","text":"<p>Middlewares s\u00e3o mecanismos criados a partir do Starlette <code>BaseHTTPMiddleware</code> que funcionam no ciclo de solicita\u00e7\u00e3o-resposta da aplica\u00e7\u00e3o, interceptando chamadas e processando-as. Eles podem acessar e manipular cada objeto de solicita\u00e7\u00e3o antes que ele seja processado por qualquer manipulador de rota, e tamb\u00e9m cada objeto de resposta antes de retorn\u00e1-lo. H\u00e1 tr\u00eas implementados.</p> <p>O middleware <code>TraceExceptionControl</code> rastreia a solicita\u00e7\u00e3o, relatando o cliente, a URL acessada, o c\u00f3digo de status da resposta e o tempo de processamento. Ele tamb\u00e9m lida com quaisquer exce\u00e7\u00f5es inesperadas e erros de interrup\u00e7\u00e3o de sinal.</p> <p>O middleware <code>RedirectNotFoundRoutes</code> redireciona qualquer solicita\u00e7\u00e3o de rota n\u00e3o encontrada que receba um erro <code>404 Not Found</code> e n\u00e3o seja uma rota permitida mapeada. Ele tamb\u00e9m lida com erros de interrup\u00e7\u00e3o de sinal.</p> <p>O middleware FastAPI <code>CORSMiddleware</code> implementa e configura o mecanismo CORS, permitindo qualquer origem, quaisquer credenciais, qualquer cabe\u00e7alho e apenas o m\u00e9todo <code>GET</code>.</p> <p></p>"},{"location":"pt/reference/#signalhandler","title":"SignalHandler","text":"<p> Defina os manipuladores de sinal para definir o sinalizador do evento de desligamento <code>c\u00f3digo fonte</code> <code>utils</code> <code>app/utils/signal_handler.py</code></p> <pre><code>class SignalHandler(\n    for_async: bool = None\n)\n</code></pre> <p>Crie um objeto de evento, seja um threading <code>Event</code> ou asyncio <code>Event</code> com base no valor do par\u00e2metro, e registre seus manipuladores para os sinais <code>SIGINT</code> e <code>SIGTERM</code> usando a fun\u00e7\u00e3o <code>signal()</code>. Os manipuladores capturar\u00e3o sinais de desligamento e definir\u00e3o o sinalizador de evento. Ent\u00e3o, opera\u00e7\u00f5es baseadas em processos ou threads podem ser encerradas graciosamente.</p> <p>Info</p> <p>Um desligamento gracioso (graceful shutdown) \u00e9 um processo controlado e ordenado para executar um desligamento seguro e liberar recursos quando a aplica\u00e7\u00e3o \u00e9 interrompido repentinamente ou recebe um sinal de desligamento/encerramento.</p> Par\u00e2metro Tipo Descri\u00e7\u00e3o <code>for_async</code> <code>bool</code> Indica se o evento ser\u00e1 ass\u00edncrono ou n\u00e3o. Default: <code>None</code>"},{"location":"pt/requirements/","title":"Requisitos","text":""},{"location":"pt/requirements/#chave-da-api","title":"Chave da API","text":"<p>Voc\u00ea deve obter uma <code>Chave da API</code> para usar as APIs da Scopus para pesquisar e recuperar as informa\u00e7\u00f5es dos artigos. Ela n\u00e3o possui espa\u00e7os e \u00e9 composta por 32 caracteres contendo apenas letras e n\u00fameros. Pode ser obtida acessando o Elsevier Developer Portal, clicando no bot\u00e3o I want an API Key e realizando seu cadastro.</p> <p></p> <p>Se voc\u00ea faz parte de uma institui\u00e7\u00e3o de ensino, voc\u00ea pode tentar confirmar se sua institui\u00e7\u00e3o est\u00e1 registrada na Elsevier para fazer login atrav\u00e9s de sua organiza\u00e7\u00e3o, ou voc\u00ea tamb\u00e9m pode tentar se registrar com seu e-mail acad\u00eamico.</p>"},{"location":"pt/requirements/#palavras-chave","title":"Palavras-chave","text":"<p>Com base no tema ou assunto de sua pesquisa, voc\u00ea deve selecionar no m\u00ednimo duas e no m\u00e1ximo quatro <code>Palavras-chave</code>, que ser\u00e3o utilizadas como par\u00e2metros e filtros na busca simult\u00e2nea no t\u00edtulo, resumo e palavras-chave dos artigos. Cada <code>Palavra-chave</code> deve ser escrita em Ingl\u00eas, contendo apenas letras, n\u00fameros, espa\u00e7os e sublinhados, com no m\u00ednimo de 2 e no m\u00e1ximo de 20 caracteres.</p> <p>Exemplo</p> <pre><code>Computer Vision, Scopus, Machine Learning, Bibliometric\n</code></pre>"},{"location":"pt/requirements/#rede-instituicional","title":"Rede Instituicional","text":"<p>Por favor esteja ciente de que a <code>Chave da API</code> s\u00f3 ser\u00e1 autenticada corretamente se voc\u00ea submet\u00ea-la enquanto estiver dentro da rede da sua universidade/institui\u00e7\u00e3o, e isso n\u00e3o inclui acesso por VPN ou proxy. Portanto, se voc\u00ea estiver totalmente remoto e fora do campus, o resumo e todos os autores dos artigos n\u00e3o ser\u00e3o retornados.</p>"},{"location":"pt/responses-and-errors/","title":"Respostas e Erros","text":"<p>Tip</p> <p>Leia a documenta\u00e7\u00e3o da MDN sobre o c\u00f3digo de status de resposta HTTP no MDN Web Docs.</p>"},{"location":"pt/responses-and-errors/#bem-sucedida","title":"Bem-sucedida","text":""},{"location":"pt/responses-and-errors/#200-ok","title":"<code>200 Ok</code>","text":"Rota Resposta <code>/scopus-survey/api</code> Renderiza a p\u00e1gina web da API da aplica\u00e7\u00e3o <code>/scopus-survey/api/search-articles</code> Baixa o arquivo CSV dos artigos encontrados <code>/scopus-survey/api/table</code> Renderiza a p\u00e1gina web da tabela de artigos"},{"location":"pt/responses-and-errors/#redirecionamento","title":"Redirecionamento","text":""},{"location":"pt/responses-and-errors/#307-temporary-redirect","title":"<code>307 Temporary Redirect</code>","text":"<p>Qualquer URL de solicita\u00e7\u00e3o que n\u00e3o esteja na rota  <code>/scopus-survey/api</code> ser\u00e1 redirecionada para ela. Redireciona qualquer solicita\u00e7\u00e3o que esteja tentando acessar uma rota n\u00e3o encontrada/inexistente.</p>"},{"location":"pt/responses-and-errors/#erro-do-cliente","title":"Erro do cliente","text":""},{"location":"pt/responses-and-errors/#401-unauthorized","title":"<code>401 Unauthorized</code>","text":"Mensagem da Exce\u00e7\u00e3o Descri\u00e7\u00e3o <code>Missing required API Key query parameter</code> Query parameter obrigat\u00f3rio <code>API Key</code> n\u00e3o encontrado na solicita\u00e7\u00e3o <code>Missing required Access Token header</code> Cabe\u00e7alho obrigat\u00f3rio <code>Access Token</code> n\u00e3o encontrado na solicita\u00e7\u00e3o <code>Invalid Access Token</code> Cabe\u00e7alho <code>Access Token</code> tem um padr\u00e3o inv\u00e1lido ou est\u00e1 incorreto"},{"location":"pt/responses-and-errors/#404-not-found","title":"<code>404 Not Found</code>","text":"Mensagem da Exce\u00e7\u00e3o Descri\u00e7\u00e3o <code>No articles found</code> Nenhum artigo foi encontrado correspondendo \u00e0s <code>Palavras-chave</code>. O total de resultados da pesquisa \u00e9 zero"},{"location":"pt/responses-and-errors/#422-unprocessable-content","title":"<code>422 Unprocessable Content</code>","text":"Mensagem da Exce\u00e7\u00e3o Descri\u00e7\u00e3o <code>Validation error in request &lt;{...}&gt;</code> Exce\u00e7\u00e3o FastAPI do Pydantic. A solicita\u00e7\u00e3o cont\u00e9m dados inv\u00e1lidos/erros <code>Missing required Keywords query parameter</code> Query parameter obrigat\u00f3rio <code>Palavras-chave</code> n\u00e3o encontrado na solicita\u00e7\u00e3o <code>There must be at least two keywords</code> O n\u00famero de <code>Palavras-chave</code> est\u00e1 abaixo do m\u00ednimo necess\u00e1rio. Submeta pelo menos duas <code>Palavras-chave</code> para realizar a busca <code>Invalid Keyword</code> A <code>Palavra-chave</code> submetida tem um padr\u00e3o inv\u00e1lido"},{"location":"pt/responses-and-errors/#erro-do-servidor","title":"Erro do Servidor","text":""},{"location":"pt/responses-and-errors/#500-internal-error","title":"<code>500 Internal Error</code>","text":"Mensagem da Exce\u00e7\u00e3o Descri\u00e7\u00e3o <code>Validation error in response &lt;{...}&gt;</code> Exce\u00e7\u00e3o FastAPI do Pydantic. A solicita\u00e7\u00e3o cont\u00e9m dados inv\u00e1lidos/erros <code>Pydantic validation error: ... validation errors for ...</code> Exce\u00e7\u00e3o do Pydantic. H\u00e1 um erro nos dados que est\u00e3o sendo validados <code>Error in decoding response from Scopus API</code> Exce\u00e7\u00e3o JSON. O corpo da resposta n\u00e3o cont\u00e9m JSON v\u00e1lido para decodificar <code>Error in validate response from Scopus API</code> Erro de serializa\u00e7\u00e3o. A resposta JSON cont\u00e9m campos n\u00e3o mapeados/inv\u00e1lidos <code>Unexpected application interruption</code> Exce\u00e7\u00e3o de interrup\u00e7\u00e3o do sinal de sa\u00edda de desligamento <code>Unexpected error &lt;...&gt;</code> Qualquer exce\u00e7\u00e3o n\u00e3o mapeada/comum"},{"location":"pt/responses-and-errors/#502-bad-gateway","title":"<code>502 Bad Gateway</code>","text":"Mensagem da Exce\u00e7\u00e3o Descri\u00e7\u00e3o <code>Invalid response from Scopus Search API</code> A resposta da Scopus Search API n\u00e3o tem conte\u00fado/dados <code>Invalid response from Scopus Abstract Retrieval API</code> A resposta da Scopus Abstract Retrieval API n\u00e3o tem conte\u00fado/dados <code>Connection error in request</code> Ocorreu um erro de conex\u00e3o ao tentar enviar a solicita\u00e7\u00e3o <code>Unexpected error from request &lt;...&gt;</code> Ocorreu um erro/exce\u00e7\u00e3o n\u00e3o mapeado ao tentar enviar a solicita\u00e7\u00e3o <code>Invalid response from Scopus Search API</code> Exce\u00e7\u00e3o de erro de status HTTP da Scopus Search API <code>Invalid response from Scopus Abstract Retrieval API</code> Exce\u00e7\u00e3o de erro de status HTTP da Scopus Abstract Retrieval API"},{"location":"pt/responses-and-errors/#504-gateway-timeout","title":"<code>504 Gateway Timeout</code>","text":"Mensagem da Exce\u00e7\u00e3o Descri\u00e7\u00e3o <code>Request connection timeout</code> A conex\u00e3o solicitada expirou"},{"location":"pt/responses-and-errors/#scopus-apis-status-error","title":"Scopus APIs Status Error","text":"<p>Tip</p> <p>Leia a documenta\u00e7\u00e3o sobre respostas para a Scopus Search API e a Scopus Abstract Retrieval API.</p> C\u00f3digo de Status Descri\u00e7\u00e3o 400 Solicita\u00e7\u00e3o inv\u00e1lida. Informa\u00e7\u00f5es enviadas inv\u00e1lidas 401 O usu\u00e1rio n\u00e3o pode ser autenticado devido a credenciais ausentes/inv\u00e1lidas 403 O usu\u00e1rio n\u00e3o pode ser autenticado ou os direitos n\u00e3o podem ser validados 429 O solicitante excedeu os limites da cota associados ao sua <code>API Key</code> 500 Erro de processamento interno da API Scopus"},{"location":"pt/scopus-abstract-retrieval-api/","title":"Scopus Abstract Retrieval API","text":"<p>Ap\u00f3s obter os IDs Scopus dos artigos, o pr\u00f3ximo passo \u00e9 us\u00e1-los para recuperar todas as informa\u00e7\u00f5es sobre cada artigo. Usaremos a Scopus Abstract Retrieval API, fornecida pela Elsevier, para recuperar os resumos Scopus com ricos metadados de artigos de todos os artigos.</p> <p>Info</p> <p>Na vers\u00e3o antiga <code>v2.0.0</code>, faz\u00edamos web scraping da p\u00e1gina de visualiza\u00e7\u00e3o do artigo da Scopus usando o BeautifulSoup, mas agora abandonamos essa pr\u00e1tica.</p>"},{"location":"pt/scopus-abstract-retrieval-api/#url-do-recurso-da-api","title":"URL do Recurso da API","text":"<p>Precisamos solicitar a URL abaixo e passar alguns par\u00e2metros para obter o resumo Scopus.</p> <pre><code>https://api.elsevier.com/content/abstract/scopus_id\n</code></pre>"},{"location":"pt/scopus-abstract-retrieval-api/#id-scopus","title":"ID Scopus","text":"<p>Para recuperar um resumo Scopus de um artigo espec\u00edfico, precisamos definir o path parameter <code>scopus_id</code>, que se refere a um identificador Scopus exclusivo atribu\u00eddo a cada artigo/resumo Scopus.</p> <pre><code>/{scopus_id}\n</code></pre> <p> Exemplo com SCOPUS_ID:85197125619 como ID Scopus:</p> <pre><code>/SCOPUS_ID:85197125619\n</code></pre>"},{"location":"pt/scopus-abstract-retrieval-api/#campos","title":"Campos","text":"<p>Ao especificar os Campos Scopus, n\u00f3s podemos filtrar a resposta e obter apenas as informa\u00e7\u00f5es desejadas dos artigos.</p> <pre><code>field=field1,field2,field3,...\n</code></pre> <p> Exemplo com todos os campos usados:</p> <pre><code>field=dc:identifier,eid,dc:title,dc:description,prism:publicationName,citedby-count,prism:volume,prism:coverDate,prism:doi,dc:creator,authors\n</code></pre>"},{"location":"pt/scopus-abstract-retrieval-api/#cabecalhos-da-requisicao","title":"Cabe\u00e7alhos da Requisi\u00e7\u00e3o","text":"<p>Os cabe\u00e7alhos inclu\u00eddos na requisi\u00e7\u00e3o. Um deles especifica sua <code>Chave da API</code>.</p> <pre><code>\"Accept-Language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7\",\n\"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\",\n\"Accept-Encoding\": \"gzip, deflate, br\",\n\"Referer\": \"https://www.scopus.com/\",\n\"Origin\": \"https://www.scopus.com\",\n\"Content-Type\": \"application/json\",\n\"Accept\": \"application/json\",\n\"User-Agent\": \"Mozilla/5.0\",\n\"Connection\": \"keep-alive\",\n\"X-ELS-APIKey\": \"Sua Chave da API\"\n</code></pre>"},{"location":"pt/scopus-abstract-retrieval-api/#url-final","title":"URL Final","text":"<p>Este \u00e9 um exemplo de uma URL completa com todos os par\u00e2metros que solicitamos.</p> <pre><code>https://api.elsevier.com/content/abstract/scopus_id/SCOPUS_ID:85197125619&amp;field=dc:identifier,eid,dc:title,dc:description,prism:publicationName,citedby-count,prism:volume,prism:coverDate,prism:doi,dc:creator,authors\n</code></pre>"},{"location":"pt/scopus-abstract-retrieval-api/#corpo-da-resposta","title":"Corpo da Resposta","text":"<p>Exemplo de um corpo de resposta da Scopus Abstract Retrieval API em uma rede institucional.</p> <pre><code>\"abstracts-retrieval-response\": {\n    \"coredata\": {\n        \"eid\": \"2-s2.0-85197125619\",\n        \"citedby-count\": \"0\",\n        \"prism:volume\": \"14\",\n        \"dc:description\": \"The advancement of technology has significantly transformed the livestock [...]\",\n        \"prism:coverDate\": \"2024-06-01\",\n        \"dc:title\": \"Digital and Precision Technologies in Dairy Cattle Farming: A Bibliometric Analysis\",\n        \"dc:creator\": {\n            \"author\": [\n                {\n                    \"ce:given-name\": \"Franck Morais\",\n                    \"preferred-name\": {\n                        \"ce:given-name\": \"Franck Morais\",\n                        \"ce:initials\": \"F.M.\",\n                        \"ce:surname\": \"de Oliveira\",\n                        \"ce:indexed-name\": \"de Oliveira F.M.\"\n                    },\n                    \"@seq\": \"1\",\n                    \"ce:initials\": \"F.M.\",\n                    \"@_fa\": \"true\",\n                    \"affiliation\": {\n                        \"@id\": \"60017841\",\n                        \"@href\": \"https://api.elsevier.com/content/affiliation/affiliation_id/60017841\"\n                    },\n                    \"ce:surname\": \"de Oliveira\",\n                    \"@auid\": \"57275191700\",\n                    \"author-url\": \"https://api.elsevier.com/content/author/author_id/57275191700\",\n                    \"ce:indexed-name\": \"de Oliveira F.M.\"\n                }\n            ]\n        },\n        \"prism:doi\": \"10.3390/ani14121832\",\n        \"publishercopyright\": \"\u00a9 2024 by the authors.\",\n        \"prism:publicationName\": \"Animals\",\n        \"dc:identifier\": \"SCOPUS_ID:85197125619\"\n    },\n    \"authors\": {\n        \"author\": [\n            {\n                \"ce:given-name\": \"Franck Morais\",\n                \"preferred-name\": {\n                    \"ce:given-name\": \"Franck Morais\",\n                    \"ce:initials\": \"F.M.\",\n                    \"ce:surname\": \"de Oliveira\",\n                    \"ce:indexed-name\": \"de Oliveira F.M.\"\n                },\n                \"@seq\": \"1\",\n                \"ce:initials\": \"F.M.\",\n                \"@_fa\": \"true\",\n                \"affiliation\": {\n                    \"@id\": \"60017841\",\n                    \"@href\": \"https://api.elsevier.com/content/affiliation/affiliation_id/60017841\"\n                },\n                \"ce:surname\": \"de Oliveira\",\n                \"@auid\": \"57275191700\",\n                \"author-url\": \"https://api.elsevier.com/content/author/author_id/57275191700\",\n                \"ce:indexed-name\": \"de Oliveira F.M.\"\n            }\n        ]\n    }\n}\n</code></pre> Campo Descri\u00e7\u00e3o <code>abstracts-retrieval-response</code> Lista os ricos metadados do artigo <code>coredata</code> Lista os principais metadados do artigo com os campos especificados <code>authors</code> Lista todos os autores do artigo <code>author</code> Lista os dados de todos os autores do artigo <p>Exemplo de um corpo de resposta da Scopus Abstract Retrieval API em uma rede fora do campus.</p> <pre><code>\"abstracts-retrieval-response\": {\n    \"coredata\": {\n        \"eid\": \"2-s2.0-85197125619\",\n        \"citedby-count\": \"0\",\n        \"prism:volume\": \"14\",\n        \"prism:coverDate\": \"2024-06-01\",\n        \"dc:title\": \"Digital and Precision Technologies in Dairy Cattle Farming: A Bibliometric Analysis\",\n        \"dc:creator\": {\n            \"author\": [\n                {\n                    \"ce:given-name\": \"Franck Morais\",\n                    \"preferred-name\": {\n                        \"ce:given-name\": \"Franck Morais\",\n                        \"ce:initials\": \"F.M.\",\n                        \"ce:surname\": \"de Oliveira\",\n                        \"ce:indexed-name\": \"de Oliveira F.M.\"\n                    },\n                    \"@seq\": \"1\",\n                    \"ce:initials\": \"F.M.\",\n                    \"@_fa\": \"true\",\n                    \"affiliation\": {\n                        \"@id\": \"60017841\",\n                        \"@href\": \"https://api.elsevier.com/content/affiliation/affiliation_id/60017841\"\n                    },\n                    \"ce:surname\": \"de Oliveira\",\n                    \"@auid\": \"57275191700\",\n                    \"author-url\": \"https://api.elsevier.com/content/author/author_id/57275191700\",\n                    \"ce:indexed-name\": \"de Oliveira F.M.\"\n                }\n            ]\n        },\n        \"prism:doi\": \"10.3390/ani14121832\",\n        \"publishercopyright\": \"\u00a9 2024 by the authors.\",\n        \"prism:publicationName\": \"Animals\",\n        \"dc:identifier\": \"SCOPUS_ID:85197125619\"\n    }\n}\n</code></pre> Campo Descri\u00e7\u00e3o <code>abstracts-retrieval-response</code> Lista os ricos metadados do artigo <code>coredata</code> Lista os principais metadados do artigo com os campos especificados <code>author</code> Lista os dados do primeiro autor do artigo"},{"location":"pt/scopus-search-api/","title":"Scopus Search API","text":"<p>Usaremos a Scopus Search API, fornecida pela Elsevier, para pesquisar artigos usando as <code>Keywords</code> e obter seus IDs Scopus. \u00c9 uma interface de pesquisa associada ao cluster Scopus contendo resumos Scopus.</p> <p>Info</p> <p>Um Cluster \u00e9 um grupo de servidores/computadores que agem como um \u00fanico sistema.</p>"},{"location":"pt/scopus-search-api/#url-do-recurso-da-api","title":"URL do Recurso da API","text":"<p>Precisamos solicitar a URL abaixo e passar alguns par\u00e2metros para a busca.</p> <pre><code>https://api.elsevier.com/content/search/scopus\n</code></pre>"},{"location":"pt/scopus-search-api/#consulta","title":"Consulta","text":"<p>Como nossa busca \u00e9 baseada em <code>Palavras-chave</code>, n\u00f3s estamos utilizando um par\u00e2metro de consulta com Scopus Search Tip para especificar nosso m\u00e9todo de busca, que \u00e9 <code>TITLE-ABS-KEY</code>, um campo combinado que buscar\u00e1 as <code>Palavras-chave</code> nos resumos, palavras-chave e t\u00edtulos dos artigos.</p> <pre><code>query=TITLE-ABS-KEY(keyword1 AND keyword2 AND ...)\n</code></pre> <p> Exemplo com Python e Machine Learning como <code>Palavras-chave</code>:</p> <pre><code>query=TITLE-ABS-KEY(Python+AND+Machine+Learning)\n</code></pre>"},{"location":"pt/scopus-search-api/#campos","title":"Campos","text":"<p>Ao especificar os Campos Scopus, n\u00f3s podemos filtrar a resposta e obter apenas os IDs Scopus dos artigos.</p> <pre><code>field=field1,field2,field3,...\n</code></pre> <p> Exemplo com o campo usado:</p> <pre><code>field=dc:identifier\n</code></pre>"},{"location":"pt/scopus-search-api/#intervalo-de-datas","title":"Intervalo de Datas","text":"<p>O intervalo de datas de interesse para artigos publicados.</p> <pre><code>date=year1-year2\n</code></pre> <p> Exemplo com o intervalo de datas utilizado, \u00e9 definido automaticamente para os \u00faltimos tr\u00eas anos:</p> <pre><code>date=2021-2024\n</code></pre>"},{"location":"pt/scopus-search-api/#cabecalhos-da-requisicao","title":"Cabe\u00e7alhos da Requisi\u00e7\u00e3o","text":"<p>Os cabe\u00e7alhos inclu\u00eddos na requisi\u00e7\u00e3o. Um deles especifica sua <code>Chave da API</code>.</p> <pre><code>\"Accept-Language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7\",\n\"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\",\n\"Accept-Encoding\": \"gzip, deflate, br\",\n\"Referer\": \"https://www.scopus.com/\",\n\"Origin\": \"https://www.scopus.com\",\n\"Content-Type\": \"application/json\",\n\"Accept\": \"application/json\",\n\"User-Agent\": \"Mozilla/5.0\",\n\"Connection\": \"keep-alive\",\n\"X-ELS-APIKey\": \"Sua Chave da  API\"\n</code></pre>"},{"location":"pt/scopus-search-api/#url-final","title":"URL Final","text":"<p>Este \u00e9 um exemplo de uma URL completa com todos os par\u00e2metros que solicitamos.</p> <pre><code>https://api.elsevier.com/content/search/scopus?query=TITLE-ABS-KEY(Python+AND+Machine+Learning)&amp;field=dc:identifier&amp;date=2021-2024&amp;suppressNavLinks=true\n</code></pre> <p>O par\u00e2metro <code>supressNavLinks</code> \u00e9 usado para suprimir a inclus\u00e3o de links de navega\u00e7\u00e3o de n\u00edvel superior no payload da resposta.</p>"},{"location":"pt/scopus-search-api/#corpo-da-resposta","title":"Corpo da Resposta","text":"<p>Exemplo de um corpo de resposta da Scopus Search API.</p> <pre><code>{\n  \"search-results\": {\n    \"opensearch:totalResults\": \"1\",\n    \"opensearch:startIndex\": \"0\",\n    \"opensearch:itemsPerPage\": \"1\",\n    \"opensearch:Query\": {\n      \"@role\": \"request\",\n      \"@searchTerms\": \"TITLE-ABS-KEY(Images, Machine Learning, Artificial Intelligence, Computer Vision)\",\n      \"@startPage\": \"0\"\n    },\n    \"entry\": [\n      {\n        \"@_fa\": \"true\",\n        \"prism:url\": \"https://api.elsevier.com/content/abstract/scopus_id/85137995729\",\n        \"dc:identifier\": \"SCOPUS_ID:85137995729\"\n      }\n    ]\n  }\n}\n</code></pre> Campo Descri\u00e7\u00e3o <code>search-results</code> Informa alguns metadados da opera\u00e7\u00e3o de busca e dos artigos encontrados <code>opensearch:totalResults</code> N\u00famero total de artigos encontrados <code>opensearch:startIndex</code> \u00cdndice da pagina\u00e7\u00e3o da qual come\u00e7amos a recuperar um grupo de artigos <code>opensearch:itemsPerPage</code> N\u00famero de artigos divididos em cada p\u00e1gina, quando h\u00e1 muitos resultados <code>opensearch:Query</code> Alguns metadados sobre as consultas de busca booleanas enviadas <code>entry</code> Lista de artigos com os campos especificados na busca"},{"location":"pt/technologies/","title":"Tecnologias","text":"<p>Linguagem</p> <ul> <li>Python <code>v3.11</code></li> </ul> <p>Ferramentas de Ambiente de Desenvolvimento</p> <ul> <li>Visual Studio Code <code>v1.86.1</code></li> <li>Makefile GNU Make <code>v4.2.1</code></li> <li>REST Client <code>v0.25.1</code> - VsCode Extension</li> </ul> <p>Docker</p> <ul> <li>Docker <code>v25.0.3</code></li> </ul> <p>Framework</p> <ul> <li>FastAPI <code>v0.109.2</code></li> </ul> <p>Gerenciamento de Depend\u00eancias</p> <ul> <li>Poetry <code>v1.7.1</code></li> </ul> <p>Depend\u00eancias da Aplica\u00e7\u00e3o</p> <ul> <li>Pandas <code>v2.2.0</code></li> <li>Pydantic <code>v2.6.1</code></li> <li>Requests <code>v2.31.0</code></li> <li>TheFuzz <code>v0.22.1</code></li> <li>Python-Levenshtein <code>v0.25.0</code></li> <li>CacheControl <code>v0.14.0</code></li> <li>QRCode <code>v7.4.2</code></li> <li>tqdm <code>v4.66.5</code></li> <li>Toml <code>v0.10.2</code></li> <li>Python-Dotenv <code>v1.0.1</code></li> </ul> <p>Depend\u00eancias de Linting e Formata\u00e7\u00e3o</p> <ul> <li>Isort <code>v5.13.2</code></li> <li>Flake8 <code>v3.8.3</code></li> <li>Pylint <code>v3.0.3</code></li> <li>MyPy <code>v1.8.0</code></li> <li>Radon <code>v6.0.1</code></li> </ul> <p>Depend\u00eancias de Vulnerabilidades e Problemas de Seguran\u00e7a</p> <ul> <li>Bandit <code>v1.7.7</code></li> <li>Pip-Audit <code>v2.7.0</code></li> </ul> <p>Depend\u00eancias de Teste</p> <ul> <li>Pytest <code>v8.0.0</code></li> <li>Pytest-Mock <code>v3.12.0</code></li> <li>Pytest-Asyncio <code>v0.23.5</code></li> <li>Coverage <code>v7.4.3</code></li> </ul> <p>Depend\u00eancias de Documenta\u00e7\u00e3o</p> <ul> <li>MkDocs <code>v1.5.3</code></li> <li>MkDocs-Material <code>v9.5.9</code></li> <li>MkDocs static i18n plugin <code>v1.2.3</code></li> <li>MKDocs markdown extra data plugin <code>v0.2.5</code></li> </ul>"},{"location":"pt/testing/","title":"Testes","text":""},{"location":"pt/testing/#testes-automatizados","title":"Testes automatizados","text":"<p> Unit\u00e1rios: testa os componentes individuais (cada unidade) isoladamente.</p> <p> Integra\u00e7\u00e3o: testa a entidade combinada de diferentes unidades, m\u00f3dulos ou componentes.</p> <p> Cobertura: cobertura de teste de 99%.</p> <pre><code>.\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 helpers/\n\u2502   \u251c\u2500\u2500 integration/\n\u2502   |   \u251c\u2500\u2500 adapters/\n|   |   |   \u251c\u2500\u2500 gateway/\n|   |   |   \u2514\u2500\u2500 helpers/\n\u2502   |   \u251c\u2500\u2500 core/\n|   |   |   \u2514\u2500\u2500 usecases/\n\u2502   |   \u2514\u2500\u2500 framework/\n|   |       \u251c\u2500\u2500 dependencies/\n|   |       \u251c\u2500\u2500 exceptions/\n|   |       \u251c\u2500\u2500 fastapi/\n|   |       \u2514\u2500\u2500 middleware/\n\u2502   \u251c\u2500\u2500 mocks/\n\u2502   \u2514\u2500\u2500 unitary/\n\u2502       \u251c\u2500\u2500 adapters/\n|       |   \u251c\u2500\u2500 gateway/\n|       |   \u251c\u2500\u2500 helpers/\n|       |   \u2514\u2500\u2500 presenters/\n\u2502       \u251c\u2500\u2500 core/\n|       |   \u251c\u2500\u2500 data/\n|       |   \u251c\u2500\u2500 domain/\n|       |   \u2514\u2500\u2500 usecases/\n\u2502       \u2514\u2500\u2500 framework/\n|           \u251c\u2500\u2500 dependencies/\n|           \u2514\u2500\u2500 exceptions/\n</code></pre> <p>Voc\u00ea pode configurar e usar o VsCode para testar todos os scripts com Pytest e o Coverage:</p> launch.json<pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Python Debugger: FastAPI\",\n      \"type\": \"debugpy\",\n      \"request\": \"launch\",\n      \"module\": \"app.framework.fastapi.main\",\n      \"pythonArgs\": [\"-Xfrozen_modules=off\"],\n      \"jinja\": true,\n      \"console\": \"integratedTerminal\",\n    }\n  ]\n}\n</code></pre> Localmente com PoetryLocalmente com PipDocker <pre><code># Configurar o Venv\nmake setup\n\n# Ativar o Venv\nsource .venv/bin/activate\n\n# Instalar as depend\u00eancias de teste com Poetry\n(.venv) poetry install --only test\n\n# Execute o Pytest no Venv\n(.venv) make test\n\n# Execute o Coverage no Venv\n(.venv) make coverage\n</code></pre> <pre><code># Configurar o Venv\nmake setup\n\n# Ativar o Venv\nsource .venv/bin/activate\n\n# Instalar as depend\u00eancias de teste com Pip\n(.venv) pip3 install -r requirements/requirements-test.txt\n\n# Execute o Pytest no Venv\n(.venv) make test\n\n# Execute o Coverage no Venv\n(.venv) make coverage\n</code></pre> <pre><code># Execute a aplica\u00e7\u00e3o no Cont\u00eainer Docker\nmake docker\n\n# Execute o Pytest no Docker\nmake test-docker\n\n# Execute o Coverage no Docker\nmake coverage-docker\n</code></pre> <p></p>"},{"location":"pt/testing/#testes-de-requisicao-das-apis-da-scopus","title":"Testes de Requisi\u00e7\u00e3o das APIs da Scopus","text":"<p>Instale a Extens\u00e3o REST Client do VsCode para configurar e enviar requisi\u00e7\u00f5es para testar as APIs da Scopus.</p> <p></p> <p>1. Acesse o arquivo <code>client.http</code>. 2. Insira sua <code>Chave da API</code> em <code>@apikey =</code>. 3. Clique em <code>Send Request</code>.</p> <p></p>"}]}