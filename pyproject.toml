[tool.poetry]
name = "ScopusSearcherAPI"
version = "2.0.0"
description = "API for Bibliographic Survey of Scopus Articles"
authors = ["mauprogramador <sir.silvabmauricio@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/mauprogramador/scopus-searcher-api"
documentation = "https://mauprogramador.github.io/scopus-searcher-api/"
keywords = ["scopus search api", "theoretical reference", "python", "clean architecture"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment :: Mozilla",
    "Framework :: FastAPI",
    "Framework :: Pytest",
    "Framework :: MkDocs",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: Free For Educational Use",
    "License :: Freeware",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: JavaScript",
    "Topic :: Documentation",
    "Topic :: Education",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["all"], version = "^0.109.2"}
pandas = "^2.2.0"
bs4 = "^0.0.2"
requests = "^2.31.0"
pyarrow = "^15.0.0"
setuptools = ">=65.5.1"
fuzzywuzzy = "^0.18.0"
python-levenshtein = "^0.25.0"
cachecontrol = "^0.14.0"
qrcode = "^7.4.2"
tqdm = "^4.66.5"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
pip-audit = "^2.7.0"
flake8 = "3.8.3"
pylint = "^3.0.3"
bandit = {extras = ["toml"], version = "^1.7.7"}
radon = {extras = ["toml"], version = "^6.0.1"}
poetry-plugin-export = "^1.6.0"
mypy = "^1.8.0"
types-requests = "^2.31.0.20240218"
types-beautifulsoup4 = "^4.12.0.20240106"
pandas-stubs = "^2.2.0.240218"
fuzzywuzzy-stubs = "^0.0.1"
dill = "^0.3.8"
types-toml = "^0.10.8.20240310"
black = "^24.4.2"
types-tqdm = "^4.66.0.20240417"
types-qrcode = "^7.4.0.20240408"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-mock = "^3.12.0"
pytest-asyncio = "^0.23.5"
coverage = "^7.4.3"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.9"
mkdocs-static-i18n = "^1.2.3"
mkdocs-markdownextradata-plugin = "^0.2.5"

[build-system]
requires = ["poetry-core"]
requires-python = "^3.11"
build-backend = "poetry.core.masonry.api"

[application]
debug = false
logging_file = false
host = "127.0.0.1"
port = 8000
reload = false

[tool.pylint]
disable = ["C0114", "C0115", "C0116", "R0903", "E1136", "E0611", "E1131", "R0801"]

[tool.bandit]
exclude_dirs = [".venv"]
skips = ["B105", "B101"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true

[tool.pytest.ini_options]
testpaths = ["tests/"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
omit = [
    "app/framework/fastapi/lifespan.py",
    "app/utils/*"
]

[tool.mypy]
python_version = "3.11"
disable_error_code = ["assignment", "no-redef", "arg-type"]

[tool.black]
target-version = ["py311"]
line-length = 79
